{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkDuplicateIncludeExcludes = void 0;\nexports.default = normalizeOptions;\nexports.normalizeCoreJSOption = normalizeCoreJSOption;\nexports.validateUseBuiltInsOption = exports.validateModulesOption = exports.normalizePluginName = void 0;\nvar _semver = require(\"semver\");\nvar _corejs2BuiltIns = require(\"@babel/compat-data/corejs2-built-ins\");\nvar _coreJsCompat = require(\"../data/core-js-compat\");\nvar _pluginsCompatData = require(\"./plugins-compat-data\");\nvar _moduleTransformations = require(\"./module-transformations\");\nvar _options = require(\"./options\");\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\nconst corejs2DefaultWebIncludes = [\"web.timers\", \"web.immediate\", \"web.dom.iterable\"];\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/preset-env\");\nconst allPluginsList = Object.keys(_pluginsCompatData.plugins);\nconst modulePlugins = [\"transform-dynamic-import\", ...Object.keys(_moduleTransformations.default).map(m => _moduleTransformations.default[m])];\nconst getValidIncludesAndExcludes = (type, corejs) => Array.from(new Set([...allPluginsList, ...(type === \"exclude\" ? modulePlugins : []), ...(corejs ? corejs == 2 ? [...Object.keys(_corejs2BuiltIns), ...corejs2DefaultWebIncludes] : Object.keys(_coreJsCompat) : [])]));\nfunction flatMap(array, fn) {\n  return Array.prototype.concat.apply([], array.map(fn));\n}\nconst normalizePluginName = plugin => plugin.replace(/^(@babel\\/|babel-)(plugin-)?/, \"\");\nexports.normalizePluginName = normalizePluginName;\nconst expandIncludesAndExcludes = function () {\n  let filterList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let type = arguments.length > 1 ? arguments[1] : undefined;\n  let corejs = arguments.length > 2 ? arguments[2] : undefined;\n  if (filterList.length === 0) return [];\n  const filterableItems = getValidIncludesAndExcludes(type, corejs);\n  const invalidFilters = [];\n  const selectedPlugins = flatMap(filterList, filter => {\n    let re;\n    if (typeof filter === \"string\") {\n      try {\n        re = new RegExp(`^${normalizePluginName(filter)}$`);\n      } catch (e) {\n        invalidFilters.push(filter);\n        return [];\n      }\n    } else {\n      re = filter;\n    }\n    const items = filterableItems.filter(item => {\n      return re.test(item) || re.test(item.replace(/^transform-/, \"proposal-\"));\n    });\n    if (items.length === 0) invalidFilters.push(filter);\n    return items;\n  });\n  v.invariant(invalidFilters.length === 0, `The plugins/built-ins '${invalidFilters.join(\", \")}' passed to the '${type}' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env`);\n  return selectedPlugins;\n};\nconst checkDuplicateIncludeExcludes = function () {\n  let include = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let exclude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const duplicates = include.filter(opt => exclude.indexOf(opt) >= 0);\n  v.invariant(duplicates.length === 0, `The plugins/built-ins '${duplicates.join(\", \")}' were found in both the \"include\" and\n    \"exclude\" options.`);\n};\nexports.checkDuplicateIncludeExcludes = checkDuplicateIncludeExcludes;\nconst normalizeTargets = targets => {\n  if (typeof targets === \"string\" || Array.isArray(targets)) {\n    return {\n      browsers: targets\n    };\n  }\n  return Object.assign({}, targets);\n};\nconst validateModulesOption = function () {\n  let modulesOpt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _options.ModulesOption.auto;\n  v.invariant(_options.ModulesOption[modulesOpt.toString()] || modulesOpt === _options.ModulesOption.false, `The 'modules' option must be one of \\n` + ` - 'false' to indicate no module processing\\n` + ` - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs'` + ` - 'auto' (default) which will automatically select 'false' if the current\\n` + `   process is known to support ES module syntax, or \"commonjs\" otherwise\\n`);\n  return modulesOpt;\n};\nexports.validateModulesOption = validateModulesOption;\nconst validateUseBuiltInsOption = function () {\n  let builtInsOpt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  v.invariant(_options.UseBuiltInsOption[builtInsOpt.toString()] || builtInsOpt === _options.UseBuiltInsOption.false, `The 'useBuiltIns' option must be either\n    'false' (default) to indicate no polyfill,\n    '\"entry\"' to indicate replacing the entry polyfill, or\n    '\"usage\"' to import only used polyfills per file`);\n  return builtInsOpt;\n};\nexports.validateUseBuiltInsOption = validateUseBuiltInsOption;\nfunction normalizeCoreJSOption(corejs, useBuiltIns) {\n  let proposals = false;\n  let rawVersion;\n  if (useBuiltIns && corejs === undefined) {\n    rawVersion = 2;\n    console.warn(\"\\nWARNING (@babel/preset-env): We noticed you're using the `useBuiltIns` option without declaring a \" + \"core-js version. Currently, we assume version 2.x when no version \" + \"is passed. Since this default version will likely change in future \" + \"versions of Babel, we recommend explicitly setting the core-js version \" + \"you are using via the `corejs` option.\\n\" + \"\\nYou should also be sure that the version you pass to the `corejs` \" + \"option matches the version specified in your `package.json`'s \" + \"`dependencies` section. If it doesn't, you need to run one of the \" + \"following commands:\\n\\n\" + \"  npm install --save core-js@2    npm install --save core-js@3\\n\" + \"  yarn add core-js@2              yarn add core-js@3\\n\\n\" + \"More info about useBuiltIns: https://babeljs.io/docs/en/babel-preset-env#usebuiltins\\n\" + \"More info about core-js: https://babeljs.io/docs/en/babel-preset-env#corejs\");\n  } else if (typeof corejs === \"object\" && corejs !== null) {\n    rawVersion = corejs.version;\n    proposals = Boolean(corejs.proposals);\n  } else {\n    rawVersion = corejs;\n  }\n  const version = rawVersion ? _semver.coerce(String(rawVersion)) : false;\n  if (!useBuiltIns && version) {\n    console.warn(\"\\nWARNING (@babel/preset-env): The `corejs` option only has an effect when the `useBuiltIns` option is not `false`\\n\");\n  }\n  if (useBuiltIns && (!version || version.major < 2 || version.major > 3)) {\n    throw new RangeError(\"Invalid Option: The version passed to `corejs` is invalid. Currently, \" + \"only core-js@2 and core-js@3 are supported.\");\n  }\n  return {\n    version,\n    proposals\n  };\n}\nfunction normalizeOptions(opts) {\n  v.validateTopLevelOptions(opts, _options.TopLevelOptions);\n  const useBuiltIns = validateUseBuiltInsOption(opts.useBuiltIns);\n  const corejs = normalizeCoreJSOption(opts.corejs, useBuiltIns);\n  const include = expandIncludesAndExcludes(opts.include, _options.TopLevelOptions.include, !!corejs.version && corejs.version.major);\n  const exclude = expandIncludesAndExcludes(opts.exclude, _options.TopLevelOptions.exclude, !!corejs.version && corejs.version.major);\n  checkDuplicateIncludeExcludes(include, exclude);\n  return {\n    bugfixes: v.validateBooleanOption(_options.TopLevelOptions.bugfixes, opts.bugfixes, false),\n    configPath: v.validateStringOption(_options.TopLevelOptions.configPath, opts.configPath, process.cwd()),\n    corejs,\n    debug: v.validateBooleanOption(_options.TopLevelOptions.debug, opts.debug, false),\n    include,\n    exclude,\n    forceAllTransforms: v.validateBooleanOption(_options.TopLevelOptions.forceAllTransforms, opts.forceAllTransforms, false),\n    ignoreBrowserslistConfig: v.validateBooleanOption(_options.TopLevelOptions.ignoreBrowserslistConfig, opts.ignoreBrowserslistConfig, false),\n    loose: v.validateBooleanOption(_options.TopLevelOptions.loose, opts.loose),\n    modules: validateModulesOption(opts.modules),\n    shippedProposals: v.validateBooleanOption(_options.TopLevelOptions.shippedProposals, opts.shippedProposals, false),\n    spec: v.validateBooleanOption(_options.TopLevelOptions.spec, opts.spec, false),\n    targets: normalizeTargets(opts.targets),\n    useBuiltIns: useBuiltIns,\n    browserslistEnv: v.validateStringOption(_options.TopLevelOptions.browserslistEnv, opts.browserslistEnv)\n  };\n}","map":{"version":3,"names":["_semver","require","_corejs2BuiltIns","_coreJsCompat","_pluginsCompatData","_moduleTransformations","_options","_helperValidatorOption","corejs2DefaultWebIncludes","v","OptionValidator","allPluginsList","Object","keys","plugins","modulePlugins","default","map","m","getValidIncludesAndExcludes","type","corejs","Array","from","Set","flatMap","array","fn","prototype","concat","apply","normalizePluginName","plugin","replace","exports","expandIncludesAndExcludes","filterList","arguments","length","undefined","filterableItems","invalidFilters","selectedPlugins","filter","re","RegExp","e","push","items","item","test","invariant","join","checkDuplicateIncludeExcludes","include","exclude","duplicates","opt","indexOf","normalizeTargets","targets","isArray","browsers","assign","validateModulesOption","modulesOpt","ModulesOption","auto","toString","false","validateUseBuiltInsOption","builtInsOpt","UseBuiltInsOption","normalizeCoreJSOption","useBuiltIns","proposals","rawVersion","console","warn","version","Boolean","coerce","String","major","RangeError","normalizeOptions","opts","validateTopLevelOptions","TopLevelOptions","bugfixes","validateBooleanOption","configPath","validateStringOption","process","cwd","debug","forceAllTransforms","ignoreBrowserslistConfig","loose","modules","shippedProposals","spec","browserslistEnv"],"sources":["C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@babel\\preset-env\\src\\normalize-options.ts"],"sourcesContent":["import semver, { type SemVer } from \"semver\";\nimport corejs2Polyfills from \"@babel/compat-data/corejs2-built-ins\";\n// @ts-expect-error Fixme: TS can not infer types from ../data/core-js-compat.js\n// but we can't import core-js-compat/data.json because JSON imports do\n// not work on Node 14\nimport corejs3Polyfills from \"../data/core-js-compat\";\nimport { plugins as pluginsList } from \"./plugins-compat-data\";\nimport moduleTransformations from \"./module-transformations\";\nimport { TopLevelOptions, ModulesOption, UseBuiltInsOption } from \"./options\";\nimport { OptionValidator } from \"@babel/helper-validator-option\";\n\nconst corejs2DefaultWebIncludes = [\n  \"web.timers\",\n  \"web.immediate\",\n  \"web.dom.iterable\",\n];\n\nimport type {\n  BuiltInsOption,\n  CorejsOption,\n  ModuleOption,\n  Options,\n  PluginListOption,\n} from \"./types\";\n\nconst v = new OptionValidator(PACKAGE_JSON.name);\n\nconst allPluginsList = Object.keys(pluginsList);\n\n// NOTE: Since module plugins are handled separately compared to other plugins (via the \"modules\" option) it\n// should only be possible to exclude and not include module plugins, otherwise it's possible that preset-env\n// will add a module plugin twice.\nconst modulePlugins = [\n  \"transform-dynamic-import\",\n  ...Object.keys(moduleTransformations).map(m => moduleTransformations[m]),\n];\n\nconst getValidIncludesAndExcludes = (\n  type: \"include\" | \"exclude\",\n  corejs: number | false,\n) =>\n  Array.from(\n    new Set([\n      ...allPluginsList,\n      ...(type === \"exclude\" ? modulePlugins : []),\n      ...(corejs\n        ? corejs == 2\n          ? [...Object.keys(corejs2Polyfills), ...corejs2DefaultWebIncludes]\n          : Object.keys(corejs3Polyfills)\n        : []),\n    ]),\n  );\n\nfunction flatMap<T, U>(array: Array<T>, fn: (item: T) => Array<U>): Array<U> {\n  return Array.prototype.concat.apply([], array.map(fn));\n}\n\nexport const normalizePluginName = (plugin: string) =>\n  plugin.replace(/^(@babel\\/|babel-)(plugin-)?/, \"\");\n\nconst expandIncludesAndExcludes = (\n  filterList: PluginListOption = [],\n  type: \"include\" | \"exclude\",\n  corejs: number | false,\n) => {\n  if (filterList.length === 0) return [];\n\n  const filterableItems = getValidIncludesAndExcludes(type, corejs);\n\n  const invalidFilters: PluginListOption = [];\n  const selectedPlugins = flatMap(filterList, filter => {\n    let re: RegExp;\n    if (typeof filter === \"string\") {\n      try {\n        re = new RegExp(`^${normalizePluginName(filter)}$`);\n      } catch (e) {\n        invalidFilters.push(filter);\n        return [];\n      }\n    } else {\n      re = filter;\n    }\n    const items = filterableItems.filter(item => {\n      return process.env.BABEL_8_BREAKING\n        ? re.test(item)\n        : re.test(item) ||\n            // For backwards compatibility, we also support matching against the\n            // proposal- name.\n            re.test(item.replace(/^transform-/, \"proposal-\"));\n    });\n    if (items.length === 0) invalidFilters.push(filter);\n    return items;\n  });\n\n  v.invariant(\n    invalidFilters.length === 0,\n    `The plugins/built-ins '${invalidFilters.join(\n      \", \",\n    )}' passed to the '${type}' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env`,\n  );\n\n  return selectedPlugins;\n};\n\nexport const checkDuplicateIncludeExcludes = (\n  include: Array<string> = [],\n  exclude: Array<string> = [],\n) => {\n  const duplicates = include.filter(opt => exclude.indexOf(opt) >= 0);\n\n  v.invariant(\n    duplicates.length === 0,\n    `The plugins/built-ins '${duplicates.join(\n      \", \",\n    )}' were found in both the \"include\" and\n    \"exclude\" options.`,\n  );\n};\n\nconst normalizeTargets = (\n  targets: string | string[] | Options[\"targets\"],\n): Options[\"targets\"] => {\n  // TODO: Allow to use only query or strings as a targets from next breaking change.\n  if (typeof targets === \"string\" || Array.isArray(targets)) {\n    return { browsers: targets };\n  }\n  return { ...targets };\n};\n\nexport const validateModulesOption = (\n  modulesOpt: ModuleOption = ModulesOption.auto,\n) => {\n  v.invariant(\n    // @ts-expect-error we have provided fallback for undefined keys\n    ModulesOption[modulesOpt.toString()] || modulesOpt === ModulesOption.false,\n    `The 'modules' option must be one of \\n` +\n      ` - 'false' to indicate no module processing\\n` +\n      ` - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs'` +\n      ` - 'auto' (default) which will automatically select 'false' if the current\\n` +\n      `   process is known to support ES module syntax, or \"commonjs\" otherwise\\n`,\n  );\n\n  return modulesOpt;\n};\n\nexport const validateUseBuiltInsOption = (\n  builtInsOpt: BuiltInsOption = false,\n) => {\n  v.invariant(\n    // @ts-expect-error we have provided fallback for undefined keys\n    UseBuiltInsOption[builtInsOpt.toString()] ||\n      builtInsOpt === UseBuiltInsOption.false,\n    `The 'useBuiltIns' option must be either\n    'false' (default) to indicate no polyfill,\n    '\"entry\"' to indicate replacing the entry polyfill, or\n    '\"usage\"' to import only used polyfills per file`,\n  );\n\n  return builtInsOpt;\n};\n\nexport type NormalizedCorejsOption = {\n  proposals: boolean;\n  version: SemVer | null | false;\n};\n\nexport function normalizeCoreJSOption(\n  corejs: CorejsOption | undefined | null,\n  useBuiltIns: BuiltInsOption,\n): NormalizedCorejsOption {\n  let proposals = false;\n  let rawVersion;\n\n  if (useBuiltIns && corejs === undefined) {\n    rawVersion = 2;\n    console.warn(\n      \"\\nWARNING (@babel/preset-env): We noticed you're using the `useBuiltIns` option without declaring a \" +\n        \"core-js version. Currently, we assume version 2.x when no version \" +\n        \"is passed. Since this default version will likely change in future \" +\n        \"versions of Babel, we recommend explicitly setting the core-js version \" +\n        \"you are using via the `corejs` option.\\n\" +\n        \"\\nYou should also be sure that the version you pass to the `corejs` \" +\n        \"option matches the version specified in your `package.json`'s \" +\n        \"`dependencies` section. If it doesn't, you need to run one of the \" +\n        \"following commands:\\n\\n\" +\n        \"  npm install --save core-js@2    npm install --save core-js@3\\n\" +\n        \"  yarn add core-js@2              yarn add core-js@3\\n\\n\" +\n        \"More info about useBuiltIns: https://babeljs.io/docs/en/babel-preset-env#usebuiltins\\n\" +\n        \"More info about core-js: https://babeljs.io/docs/en/babel-preset-env#corejs\",\n    );\n  } else if (typeof corejs === \"object\" && corejs !== null) {\n    rawVersion = corejs.version;\n    proposals = Boolean(corejs.proposals);\n  } else {\n    rawVersion = corejs;\n  }\n\n  const version = rawVersion ? semver.coerce(String(rawVersion)) : false;\n\n  if (!useBuiltIns && version) {\n    console.warn(\n      \"\\nWARNING (@babel/preset-env): The `corejs` option only has an effect when the `useBuiltIns` option is not `false`\\n\",\n    );\n  }\n\n  if (useBuiltIns && (!version || version.major < 2 || version.major > 3)) {\n    throw new RangeError(\n      \"Invalid Option: The version passed to `corejs` is invalid. Currently, \" +\n        \"only core-js@2 and core-js@3 are supported.\",\n    );\n  }\n\n  return { version, proposals };\n}\n\nexport default function normalizeOptions(opts: Options) {\n  v.validateTopLevelOptions(opts, TopLevelOptions);\n\n  const useBuiltIns = validateUseBuiltInsOption(opts.useBuiltIns);\n\n  const corejs = normalizeCoreJSOption(opts.corejs, useBuiltIns);\n\n  const include = expandIncludesAndExcludes(\n    opts.include,\n    TopLevelOptions.include,\n    !!corejs.version && corejs.version.major,\n  );\n\n  const exclude = expandIncludesAndExcludes(\n    opts.exclude,\n    TopLevelOptions.exclude,\n    !!corejs.version && corejs.version.major,\n  );\n\n  checkDuplicateIncludeExcludes(include, exclude);\n\n  return {\n    bugfixes: v.validateBooleanOption(\n      TopLevelOptions.bugfixes,\n      opts.bugfixes,\n      process.env.BABEL_8_BREAKING ? true : false,\n    ),\n    configPath: v.validateStringOption(\n      TopLevelOptions.configPath,\n      opts.configPath,\n      process.cwd(),\n    ),\n    corejs,\n    debug: v.validateBooleanOption(TopLevelOptions.debug, opts.debug, false),\n    include,\n    exclude,\n    forceAllTransforms: v.validateBooleanOption(\n      TopLevelOptions.forceAllTransforms,\n      opts.forceAllTransforms,\n      false,\n    ),\n    ignoreBrowserslistConfig: v.validateBooleanOption(\n      TopLevelOptions.ignoreBrowserslistConfig,\n      opts.ignoreBrowserslistConfig,\n      false,\n    ),\n    loose: v.validateBooleanOption<boolean>(TopLevelOptions.loose, opts.loose),\n    modules: validateModulesOption(opts.modules),\n    shippedProposals: v.validateBooleanOption(\n      TopLevelOptions.shippedProposals,\n      opts.shippedProposals,\n      false,\n    ),\n    spec: v.validateBooleanOption(TopLevelOptions.spec, opts.spec, false),\n    targets: normalizeTargets(opts.targets),\n    useBuiltIns: useBuiltIns,\n    browserslistEnv: v.validateStringOption<string>(\n      TopLevelOptions.browserslistEnv,\n      opts.browserslistEnv,\n    ),\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}