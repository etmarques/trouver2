{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPolyfillPlugins = exports.getModulesPluginNames = exports.default = void 0;\nexports.isPluginRequired = isPluginRequired;\nexports.transformIncludesAndExcludes = void 0;\nvar _semver = require(\"semver\");\nvar _debug = require(\"./debug\");\nvar _getOptionSpecificExcludes = require(\"./get-option-specific-excludes\");\nvar _filterItems = require(\"./filter-items\");\nvar _moduleTransformations = require(\"./module-transformations\");\nvar _normalizeOptions = require(\"./normalize-options\");\nvar _shippedProposals = require(\"./shipped-proposals\");\nvar _pluginsCompatData = require(\"./plugins-compat-data\");\nvar _regenerator = require(\"./polyfills/regenerator\");\nvar _babelPolyfill = require(\"./polyfills/babel-polyfill\");\nvar _babelPluginPolyfillCorejs = require(\"babel-plugin-polyfill-corejs2\");\nvar _babelPluginPolyfillCorejs2 = require(\"babel-plugin-polyfill-corejs3\");\nvar _babelPluginPolyfillRegenerator = require(\"babel-plugin-polyfill-regenerator\");\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\nvar _availablePlugins = require(\"./available-plugins\");\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nconst pluginCoreJS2 = _babelPluginPolyfillCorejs.default || _babelPluginPolyfillCorejs;\nconst pluginCoreJS3 = _babelPluginPolyfillCorejs2.default || _babelPluginPolyfillCorejs2;\nconst pluginRegenerator = _babelPluginPolyfillRegenerator.default || _babelPluginPolyfillRegenerator;\nfunction isPluginRequired(targets, support) {\n  return (0, _helperCompilationTargets.isRequired)(\"fake-name\", targets, {\n    compatData: {\n      \"fake-name\": support\n    }\n  });\n}\nfunction filterStageFromList(list, stageList) {\n  return Object.keys(list).reduce((result, item) => {\n    if (!stageList.has(item)) {\n      result[item] = list[item];\n    }\n    return result;\n  }, {});\n}\nconst pluginLists = {\n  withProposals: {\n    withoutBugfixes: _pluginsCompatData.plugins,\n    withBugfixes: Object.assign({}, _pluginsCompatData.plugins, _pluginsCompatData.pluginsBugfixes)\n  },\n  withoutProposals: {\n    withoutBugfixes: filterStageFromList(_pluginsCompatData.plugins, _shippedProposals.proposalPlugins),\n    withBugfixes: filterStageFromList(Object.assign({}, _pluginsCompatData.plugins, _pluginsCompatData.pluginsBugfixes), _shippedProposals.proposalPlugins)\n  }\n};\nfunction getPluginList(proposals, bugfixes) {\n  if (proposals) {\n    if (bugfixes) return pluginLists.withProposals.withBugfixes;else return pluginLists.withProposals.withoutBugfixes;\n  } else {\n    if (bugfixes) return pluginLists.withoutProposals.withBugfixes;else return pluginLists.withoutProposals.withoutBugfixes;\n  }\n}\nconst getPlugin = pluginName => {\n  const plugin = _availablePlugins.default[pluginName]();\n  if (!plugin) {\n    throw new Error(`Could not find plugin \"${pluginName}\". Ensure there is an entry in ./available-plugins.js for it.`);\n  }\n  return plugin;\n};\nconst transformIncludesAndExcludes = opts => {\n  return opts.reduce((result, opt) => {\n    const target = opt.match(/^(es|es6|es7|esnext|web)\\./) ? \"builtIns\" : \"plugins\";\n    result[target].add(opt);\n    return result;\n  }, {\n    all: opts,\n    plugins: new Set(),\n    builtIns: new Set()\n  });\n};\nexports.transformIncludesAndExcludes = transformIncludesAndExcludes;\nconst getModulesPluginNames = _ref => {\n  let {\n    modules,\n    transformations,\n    shouldTransformESM,\n    shouldTransformDynamicImport,\n    shouldTransformExportNamespaceFrom,\n    shouldParseTopLevelAwait\n  } = _ref;\n  const modulesPluginNames = [];\n  if (modules !== false && transformations[modules]) {\n    if (shouldTransformESM) {\n      modulesPluginNames.push(transformations[modules]);\n    }\n    if (shouldTransformDynamicImport && shouldTransformESM && modules !== \"umd\") {\n      modulesPluginNames.push(\"transform-dynamic-import\");\n    } else {\n      if (shouldTransformDynamicImport) {\n        console.warn(\"Dynamic import can only be supported when transforming ES modules\" + \" to AMD, CommonJS or SystemJS. Only the parser plugin will be enabled.\");\n      }\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n  } else {\n    modulesPluginNames.push(\"syntax-dynamic-import\");\n  }\n  if (shouldTransformExportNamespaceFrom) {\n    modulesPluginNames.push(\"transform-export-namespace-from\");\n  } else {\n    modulesPluginNames.push(\"syntax-export-namespace-from\");\n  }\n  if (shouldParseTopLevelAwait) {\n    modulesPluginNames.push(\"syntax-top-level-await\");\n  }\n  modulesPluginNames.push(\"syntax-import-meta\");\n  return modulesPluginNames;\n};\nexports.getModulesPluginNames = getModulesPluginNames;\nconst getPolyfillPlugins = _ref2 => {\n  let {\n    useBuiltIns,\n    corejs,\n    polyfillTargets,\n    include,\n    exclude,\n    proposals,\n    shippedProposals,\n    regenerator,\n    debug\n  } = _ref2;\n  const polyfillPlugins = [];\n  if (useBuiltIns === \"usage\" || useBuiltIns === \"entry\") {\n    const pluginOptions = {\n      method: `${useBuiltIns}-global`,\n      version: corejs ? corejs.toString() : undefined,\n      targets: polyfillTargets,\n      include,\n      exclude,\n      proposals,\n      shippedProposals,\n      debug,\n      \"#__secret_key__@babel/preset-env__compatibility\": {\n        noRuntimeName: true\n      }\n    };\n    if (corejs) {\n      if (useBuiltIns === \"usage\") {\n        if (corejs.major === 2) {\n          polyfillPlugins.push([pluginCoreJS2, pluginOptions], [_babelPolyfill.default, {\n            usage: true\n          }]);\n        } else {\n          polyfillPlugins.push([pluginCoreJS3, pluginOptions], [_babelPolyfill.default, {\n            usage: true,\n            deprecated: true\n          }]);\n        }\n        if (regenerator) {\n          polyfillPlugins.push([pluginRegenerator, {\n            method: \"usage-global\",\n            debug\n          }]);\n        }\n      } else {\n        if (corejs.major === 2) {\n          polyfillPlugins.push([_babelPolyfill.default, {\n            regenerator\n          }], [pluginCoreJS2, pluginOptions]);\n        } else {\n          polyfillPlugins.push([pluginCoreJS3, pluginOptions], [_babelPolyfill.default, {\n            deprecated: true\n          }]);\n          if (!regenerator) {\n            polyfillPlugins.push([_regenerator.default, pluginOptions]);\n          }\n        }\n      }\n    }\n  }\n  return polyfillPlugins;\n};\nexports.getPolyfillPlugins = getPolyfillPlugins;\nfunction getLocalTargets(optionsTargets, ignoreBrowserslistConfig, configPath, browserslistEnv) {\n  if (optionsTargets != null && optionsTargets.esmodules && optionsTargets.browsers) {\n    console.warn(`\n@babel/preset-env: esmodules and browsers targets have been specified together.\n\\`browsers\\` target, \\`${optionsTargets.browsers.toString()}\\` will be ignored.\n`);\n  }\n  return (0, _helperCompilationTargets.default)(optionsTargets, {\n    ignoreBrowserslistConfig,\n    configPath,\n    browserslistEnv\n  });\n}\nfunction supportsStaticESM(caller) {\n  return !!(caller != null && caller.supportsStaticESM);\n}\nfunction supportsDynamicImport(caller) {\n  return !!(caller != null && caller.supportsDynamicImport);\n}\nfunction supportsExportNamespaceFrom(caller) {\n  return !!(caller != null && caller.supportsExportNamespaceFrom);\n}\nfunction supportsTopLevelAwait(caller) {\n  return !!(caller != null && caller.supportsTopLevelAwait);\n}\nvar _default = (0, _helperPluginUtils.declarePreset)((api, opts) => {\n  api.assertVersion(7);\n  const babelTargets = api.targets();\n  const {\n    bugfixes,\n    configPath,\n    debug,\n    exclude: optionsExclude,\n    forceAllTransforms,\n    ignoreBrowserslistConfig,\n    include: optionsInclude,\n    loose,\n    modules,\n    shippedProposals,\n    spec,\n    targets: optionsTargets,\n    useBuiltIns,\n    corejs: {\n      version: corejs,\n      proposals\n    },\n    browserslistEnv\n  } = (0, _normalizeOptions.default)(opts);\n  let targets = babelTargets;\n  if (_semver.lt(api.version, \"7.13.0\") || opts.targets || opts.configPath || opts.browserslistEnv || opts.ignoreBrowserslistConfig) {\n    {\n      var hasUglifyTarget = false;\n      if (optionsTargets != null && optionsTargets.uglify) {\n        hasUglifyTarget = true;\n        delete optionsTargets.uglify;\n        console.warn(`\nThe uglify target has been deprecated. Set the top level\noption \\`forceAllTransforms: true\\` instead.\n`);\n      }\n    }\n    targets = getLocalTargets(optionsTargets, ignoreBrowserslistConfig, configPath, browserslistEnv);\n  }\n  const transformTargets = forceAllTransforms || hasUglifyTarget ? {} : targets;\n  const include = transformIncludesAndExcludes(optionsInclude);\n  const exclude = transformIncludesAndExcludes(optionsExclude);\n  const compatData = getPluginList(shippedProposals, bugfixes);\n  const shouldSkipExportNamespaceFrom = modules === \"auto\" && (api.caller == null ? void 0 : api.caller(supportsExportNamespaceFrom)) || modules === false && !(0, _helperCompilationTargets.isRequired)(\"transform-export-namespace-from\", transformTargets, {\n    compatData,\n    includes: include.plugins,\n    excludes: exclude.plugins\n  });\n  const modulesPluginNames = getModulesPluginNames({\n    modules,\n    transformations: _moduleTransformations.default,\n    shouldTransformESM: modules !== \"auto\" || !(api.caller != null && api.caller(supportsStaticESM)),\n    shouldTransformDynamicImport: modules !== \"auto\" || !(api.caller != null && api.caller(supportsDynamicImport)),\n    shouldTransformExportNamespaceFrom: !shouldSkipExportNamespaceFrom,\n    shouldParseTopLevelAwait: !api.caller || api.caller(supportsTopLevelAwait)\n  });\n  const pluginNames = (0, _helperCompilationTargets.filterItems)(compatData, include.plugins, exclude.plugins, transformTargets, modulesPluginNames, (0, _getOptionSpecificExcludes.default)({\n    loose\n  }), _shippedProposals.pluginSyntaxMap);\n  if (shippedProposals) {\n    (0, _filterItems.addProposalSyntaxPlugins)(pluginNames, _shippedProposals.proposalSyntaxPlugins);\n  }\n  (0, _filterItems.removeUnsupportedItems)(pluginNames, api.version);\n  (0, _filterItems.removeUnnecessaryItems)(pluginNames, _pluginsCompatData.overlappingPlugins);\n  const polyfillPlugins = getPolyfillPlugins({\n    useBuiltIns,\n    corejs,\n    polyfillTargets: targets,\n    include: include.builtIns,\n    exclude: exclude.builtIns,\n    proposals,\n    shippedProposals,\n    regenerator: pluginNames.has(\"transform-regenerator\"),\n    debug\n  });\n  const pluginUseBuiltIns = useBuiltIns !== false;\n  const plugins = Array.from(pluginNames).map(pluginName => {\n    if (pluginName === \"transform-class-properties\" || pluginName === \"transform-private-methods\" || pluginName === \"transform-private-property-in-object\") {\n      return [getPlugin(pluginName), {\n        loose: loose ? \"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\" : \"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"\n      }];\n    }\n    if (pluginName === \"syntax-import-attributes\") {\n      return [getPlugin(pluginName), {\n        deprecatedAssertSyntax: true\n      }];\n    }\n    return [getPlugin(pluginName), {\n      spec,\n      loose,\n      useBuiltIns: pluginUseBuiltIns\n    }];\n  }).concat(polyfillPlugins);\n  if (debug) {\n    console.log(\"@babel/preset-env: `DEBUG` option\");\n    console.log(\"\\nUsing targets:\");\n    console.log(JSON.stringify((0, _helperCompilationTargets.prettifyTargets)(targets), null, 2));\n    console.log(`\\nUsing modules transform: ${modules.toString()}`);\n    console.log(\"\\nUsing plugins:\");\n    pluginNames.forEach(pluginName => {\n      (0, _debug.logPlugin)(pluginName, targets, compatData);\n    });\n    if (!useBuiltIns) {\n      console.log(\"\\nUsing polyfills: No polyfills were added, since the `useBuiltIns` option was not set.\");\n    }\n  }\n  return {\n    plugins\n  };\n});\nexports.default = _default;","map":{"version":3,"names":["_semver","require","_debug","_getOptionSpecificExcludes","_filterItems","_moduleTransformations","_normalizeOptions","_shippedProposals","_pluginsCompatData","_regenerator","_babelPolyfill","_babelPluginPolyfillCorejs","_babelPluginPolyfillCorejs2","_babelPluginPolyfillRegenerator","_helperCompilationTargets","_availablePlugins","_helperPluginUtils","pluginCoreJS2","default","pluginCoreJS3","pluginRegenerator","isPluginRequired","targets","support","isRequired","compatData","filterStageFromList","list","stageList","Object","keys","reduce","result","item","has","pluginLists","withProposals","withoutBugfixes","plugins","withBugfixes","assign","pluginsBugfixes","withoutProposals","proposalPlugins","getPluginList","proposals","bugfixes","getPlugin","pluginName","plugin","Error","transformIncludesAndExcludes","opts","opt","target","match","add","all","Set","builtIns","exports","getModulesPluginNames","_ref","modules","transformations","shouldTransformESM","shouldTransformDynamicImport","shouldTransformExportNamespaceFrom","shouldParseTopLevelAwait","modulesPluginNames","push","console","warn","getPolyfillPlugins","_ref2","useBuiltIns","corejs","polyfillTargets","include","exclude","shippedProposals","regenerator","debug","polyfillPlugins","pluginOptions","method","version","toString","undefined","noRuntimeName","major","usage","deprecated","getLocalTargets","optionsTargets","ignoreBrowserslistConfig","configPath","browserslistEnv","esmodules","browsers","supportsStaticESM","caller","supportsDynamicImport","supportsExportNamespaceFrom","supportsTopLevelAwait","_default","declarePreset","api","assertVersion","babelTargets","optionsExclude","forceAllTransforms","optionsInclude","loose","spec","lt","hasUglifyTarget","uglify","transformTargets","shouldSkipExportNamespaceFrom","includes","excludes","pluginNames","filterItems","pluginSyntaxMap","addProposalSyntaxPlugins","proposalSyntaxPlugins","removeUnsupportedItems","removeUnnecessaryItems","overlappingPlugins","pluginUseBuiltIns","Array","from","map","deprecatedAssertSyntax","concat","log","JSON","stringify","prettifyTargets","forEach","logPlugin"],"sources":["C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@babel\\preset-env\\src\\index.ts"],"sourcesContent":["import semver, { type SemVer } from \"semver\";\nimport { logPlugin } from \"./debug\";\nimport getOptionSpecificExcludesFor from \"./get-option-specific-excludes\";\nimport {\n  addProposalSyntaxPlugins,\n  removeUnnecessaryItems,\n  removeUnsupportedItems,\n} from \"./filter-items\";\nimport moduleTransformations from \"./module-transformations\";\nimport normalizeOptions from \"./normalize-options\";\nimport {\n  pluginSyntaxMap,\n  proposalPlugins,\n  proposalSyntaxPlugins,\n} from \"./shipped-proposals\";\nimport {\n  plugins as pluginsList,\n  pluginsBugfixes as pluginsBugfixesList,\n  overlappingPlugins,\n} from \"./plugins-compat-data\";\n\nimport removeRegeneratorEntryPlugin from \"./polyfills/regenerator\";\nimport legacyBabelPolyfillPlugin from \"./polyfills/babel-polyfill\";\n\nimport type { CallerMetadata } from \"@babel/core\";\n\nimport _pluginCoreJS2 from \"babel-plugin-polyfill-corejs2\";\nimport _pluginCoreJS3 from \"babel-plugin-polyfill-corejs3\";\nimport _pluginRegenerator from \"babel-plugin-polyfill-regenerator\";\nconst pluginCoreJS2 = _pluginCoreJS2.default || _pluginCoreJS2;\nconst pluginCoreJS3 = _pluginCoreJS3.default || _pluginCoreJS3;\nconst pluginRegenerator = _pluginRegenerator.default || _pluginRegenerator;\n\nimport getTargets, {\n  prettifyTargets,\n  filterItems,\n  isRequired,\n} from \"@babel/helper-compilation-targets\";\nimport type { Targets, InputTargets } from \"@babel/helper-compilation-targets\";\nimport availablePlugins from \"./available-plugins\";\nimport { declarePreset } from \"@babel/helper-plugin-utils\";\n\ntype ModuleTransformationsType =\n  typeof import(\"./module-transformations\").default;\nimport type { BuiltInsOption, ModuleOption, Options } from \"./types\";\n\n// TODO: Remove in Babel 8\nexport function isPluginRequired(targets: Targets, support: Targets) {\n  return isRequired(\"fake-name\", targets, {\n    compatData: { \"fake-name\": support },\n  });\n}\n\nfunction filterStageFromList(\n  list: { [feature: string]: Targets },\n  stageList: Set<string>,\n) {\n  return Object.keys(list).reduce((result, item) => {\n    if (!stageList.has(item)) {\n      // @ts-expect-error todo: refine result types\n      result[item] = list[item];\n    }\n\n    return result;\n  }, {});\n}\n\nconst pluginLists = {\n  withProposals: {\n    withoutBugfixes: pluginsList,\n    withBugfixes: Object.assign({}, pluginsList, pluginsBugfixesList),\n  },\n  withoutProposals: {\n    withoutBugfixes: filterStageFromList(pluginsList, proposalPlugins),\n    withBugfixes: filterStageFromList(\n      Object.assign({}, pluginsList, pluginsBugfixesList),\n      proposalPlugins,\n    ),\n  },\n};\n\nfunction getPluginList(proposals: boolean, bugfixes: boolean) {\n  if (proposals) {\n    if (bugfixes) return pluginLists.withProposals.withBugfixes;\n    else return pluginLists.withProposals.withoutBugfixes;\n  } else {\n    if (bugfixes) return pluginLists.withoutProposals.withBugfixes;\n    else return pluginLists.withoutProposals.withoutBugfixes;\n  }\n}\n\nconst getPlugin = (pluginName: string) => {\n  const plugin =\n    // @ts-expect-error plugin name is constructed from available plugin list\n    availablePlugins[pluginName]();\n\n  if (!plugin) {\n    throw new Error(\n      `Could not find plugin \"${pluginName}\". Ensure there is an entry in ./available-plugins.js for it.`,\n    );\n  }\n\n  return plugin;\n};\n\nexport const transformIncludesAndExcludes = (opts: Array<string>): any => {\n  return opts.reduce(\n    (result, opt) => {\n      const target = opt.match(/^(es|es6|es7|esnext|web)\\./)\n        ? \"builtIns\"\n        : \"plugins\";\n      result[target].add(opt);\n      return result;\n    },\n    {\n      all: opts,\n      plugins: new Set(),\n      builtIns: new Set(),\n    },\n  );\n};\n\nexport const getModulesPluginNames = ({\n  modules,\n  transformations,\n  shouldTransformESM,\n  shouldTransformDynamicImport,\n  shouldTransformExportNamespaceFrom,\n  shouldParseTopLevelAwait,\n}: {\n  modules: ModuleOption;\n  transformations: ModuleTransformationsType;\n  shouldTransformESM: boolean;\n  shouldTransformDynamicImport: boolean;\n  shouldTransformExportNamespaceFrom: boolean;\n  shouldParseTopLevelAwait: boolean;\n}) => {\n  const modulesPluginNames = [];\n  if (modules !== false && transformations[modules]) {\n    if (shouldTransformESM) {\n      modulesPluginNames.push(transformations[modules]);\n    }\n\n    if (\n      shouldTransformDynamicImport &&\n      shouldTransformESM &&\n      modules !== \"umd\"\n    ) {\n      modulesPluginNames.push(\"transform-dynamic-import\");\n    } else {\n      if (shouldTransformDynamicImport) {\n        console.warn(\n          \"Dynamic import can only be supported when transforming ES modules\" +\n            \" to AMD, CommonJS or SystemJS. Only the parser plugin will be enabled.\",\n        );\n      }\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n  } else {\n    modulesPluginNames.push(\"syntax-dynamic-import\");\n  }\n\n  if (shouldTransformExportNamespaceFrom) {\n    modulesPluginNames.push(\"transform-export-namespace-from\");\n  } else {\n    modulesPluginNames.push(\"syntax-export-namespace-from\");\n  }\n\n  if (shouldParseTopLevelAwait) {\n    modulesPluginNames.push(\"syntax-top-level-await\");\n  }\n\n  // Enable import meta for @babel/core < 7.10\n  modulesPluginNames.push(\"syntax-import-meta\");\n\n  return modulesPluginNames;\n};\n\nexport const getPolyfillPlugins = ({\n  useBuiltIns,\n  corejs,\n  polyfillTargets,\n  include,\n  exclude,\n  proposals,\n  shippedProposals,\n  regenerator,\n  debug,\n}: {\n  useBuiltIns: BuiltInsOption;\n  corejs: SemVer | null | false;\n  polyfillTargets: Targets;\n  include: Set<string>;\n  exclude: Set<string>;\n  proposals: boolean;\n  shippedProposals: boolean;\n  regenerator: boolean;\n  debug: boolean;\n}) => {\n  const polyfillPlugins = [];\n  if (useBuiltIns === \"usage\" || useBuiltIns === \"entry\") {\n    const pluginOptions = {\n      method: `${useBuiltIns}-global`,\n      version: corejs ? corejs.toString() : undefined,\n      targets: polyfillTargets,\n      include,\n      exclude,\n      proposals,\n      shippedProposals,\n      debug,\n      \"#__secret_key__@babel/preset-env__compatibility\": {\n        noRuntimeName: true,\n      },\n    };\n\n    if (corejs) {\n      if (useBuiltIns === \"usage\") {\n        if (corejs.major === 2) {\n          polyfillPlugins.push(\n            [pluginCoreJS2, pluginOptions],\n            [legacyBabelPolyfillPlugin, { usage: true }],\n          );\n        } else {\n          polyfillPlugins.push(\n            [pluginCoreJS3, pluginOptions],\n            [legacyBabelPolyfillPlugin, { usage: true, deprecated: true }],\n          );\n        }\n        if (regenerator) {\n          polyfillPlugins.push([\n            pluginRegenerator,\n            { method: \"usage-global\", debug },\n          ]);\n        }\n      } else {\n        if (corejs.major === 2) {\n          polyfillPlugins.push(\n            [legacyBabelPolyfillPlugin, { regenerator }],\n            [pluginCoreJS2, pluginOptions],\n          );\n        } else {\n          polyfillPlugins.push(\n            [pluginCoreJS3, pluginOptions],\n            [legacyBabelPolyfillPlugin, { deprecated: true }],\n          );\n          if (!regenerator) {\n            polyfillPlugins.push([removeRegeneratorEntryPlugin, pluginOptions]);\n          }\n        }\n      }\n    }\n  }\n  return polyfillPlugins;\n};\n\nfunction getLocalTargets(\n  optionsTargets: Options[\"targets\"],\n  ignoreBrowserslistConfig: boolean,\n  configPath: string,\n  browserslistEnv: string,\n) {\n  if (optionsTargets?.esmodules && optionsTargets.browsers) {\n    console.warn(`\n@babel/preset-env: esmodules and browsers targets have been specified together.\n\\`browsers\\` target, \\`${optionsTargets.browsers.toString()}\\` will be ignored.\n`);\n  }\n\n  return getTargets(optionsTargets as InputTargets, {\n    ignoreBrowserslistConfig,\n    configPath,\n    browserslistEnv,\n  });\n}\n\nfunction supportsStaticESM(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsStaticESM is not defined in CallerMetadata\n  return !!caller?.supportsStaticESM;\n}\n\nfunction supportsDynamicImport(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsDynamicImport is not defined in CallerMetadata\n  return !!caller?.supportsDynamicImport;\n}\n\nfunction supportsExportNamespaceFrom(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsExportNamespaceFrom is not defined in CallerMetadata\n  return !!caller?.supportsExportNamespaceFrom;\n}\n\nfunction supportsTopLevelAwait(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsTopLevelAwait is not defined in CallerMetadata\n  return !!caller?.supportsTopLevelAwait;\n}\n\nexport default declarePreset((api, opts: Options) => {\n  api.assertVersion(7);\n\n  const babelTargets = api.targets();\n\n  const {\n    bugfixes,\n    configPath,\n    debug,\n    exclude: optionsExclude,\n    forceAllTransforms,\n    ignoreBrowserslistConfig,\n    include: optionsInclude,\n    loose,\n    modules,\n    shippedProposals,\n    spec,\n    targets: optionsTargets,\n    useBuiltIns,\n    corejs: { version: corejs, proposals },\n    browserslistEnv,\n  } = normalizeOptions(opts);\n\n  let targets = babelTargets;\n\n  if (\n    // @babel/core < 7.13.0 doesn't load targets (api.targets() always\n    // returns {} thanks to @babel/helper-plugin-utils), so we always want\n    // to fallback to the old targets behavior in this case.\n    semver.lt(api.version, \"7.13.0\") ||\n    // If any browserslist-related option is specified, fallback to the old\n    // behavior of not using the targets specified in the top-level options.\n    opts.targets ||\n    opts.configPath ||\n    opts.browserslistEnv ||\n    opts.ignoreBrowserslistConfig\n  ) {\n    if (!process.env.BABEL_8_BREAKING) {\n      // eslint-disable-next-line no-var\n      var hasUglifyTarget = false;\n\n      if (optionsTargets?.uglify) {\n        hasUglifyTarget = true;\n        delete optionsTargets.uglify;\n\n        console.warn(`\nThe uglify target has been deprecated. Set the top level\noption \\`forceAllTransforms: true\\` instead.\n`);\n      }\n    }\n\n    targets = getLocalTargets(\n      optionsTargets,\n      ignoreBrowserslistConfig,\n      configPath,\n      browserslistEnv,\n    );\n  }\n\n  const transformTargets = (\n    process.env.BABEL_8_BREAKING\n      ? forceAllTransforms\n      : forceAllTransforms || hasUglifyTarget\n  )\n    ? ({} as Targets)\n    : targets;\n\n  const include = transformIncludesAndExcludes(optionsInclude);\n  const exclude = transformIncludesAndExcludes(optionsExclude);\n\n  const compatData = getPluginList(shippedProposals, bugfixes);\n  const shouldSkipExportNamespaceFrom =\n    (modules === \"auto\" && api.caller?.(supportsExportNamespaceFrom)) ||\n    (modules === false &&\n      !isRequired(\"transform-export-namespace-from\", transformTargets, {\n        compatData,\n        includes: include.plugins,\n        excludes: exclude.plugins,\n      }));\n  const modulesPluginNames = getModulesPluginNames({\n    modules,\n    transformations: moduleTransformations,\n    // TODO: Remove the 'api.caller' check eventually. Just here to prevent\n    // unnecessary breakage in the short term for users on older betas/RCs.\n    shouldTransformESM: modules !== \"auto\" || !api.caller?.(supportsStaticESM),\n    shouldTransformDynamicImport:\n      modules !== \"auto\" || !api.caller?.(supportsDynamicImport),\n    shouldTransformExportNamespaceFrom: !shouldSkipExportNamespaceFrom,\n    shouldParseTopLevelAwait:\n      !api.caller || (api.caller(supportsTopLevelAwait) as boolean),\n  });\n\n  const pluginNames = filterItems(\n    compatData,\n    include.plugins,\n    exclude.plugins,\n    transformTargets,\n    modulesPluginNames,\n    getOptionSpecificExcludesFor({ loose }),\n    pluginSyntaxMap,\n  );\n  if (shippedProposals) {\n    addProposalSyntaxPlugins(pluginNames, proposalSyntaxPlugins);\n  }\n  removeUnsupportedItems(pluginNames, api.version);\n  removeUnnecessaryItems(pluginNames, overlappingPlugins);\n\n  const polyfillPlugins = getPolyfillPlugins({\n    useBuiltIns,\n    corejs,\n    polyfillTargets: targets,\n    include: include.builtIns,\n    exclude: exclude.builtIns,\n    proposals,\n    shippedProposals,\n    regenerator: pluginNames.has(\"transform-regenerator\"),\n    debug,\n  });\n\n  const pluginUseBuiltIns = useBuiltIns !== false;\n  const plugins = Array.from(pluginNames)\n    .map(pluginName => {\n      if (\n        pluginName === \"transform-class-properties\" ||\n        pluginName === \"transform-private-methods\" ||\n        pluginName === \"transform-private-property-in-object\"\n      ) {\n        return [\n          getPlugin(pluginName),\n          {\n            loose: loose\n              ? \"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"\n              : \"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\",\n          },\n        ];\n      }\n      if (pluginName === \"syntax-import-attributes\") {\n        // For backward compatibility with the import-assertions plugin, we\n        // allow the deprecated `assert` keyword.\n        // TODO(Babel 8): Revisit this.\n        return [getPlugin(pluginName), { deprecatedAssertSyntax: true }];\n      }\n      return [\n        getPlugin(pluginName),\n        { spec, loose, useBuiltIns: pluginUseBuiltIns },\n      ];\n    })\n    .concat(polyfillPlugins);\n\n  if (debug) {\n    console.log(\"@babel/preset-env: `DEBUG` option\");\n    console.log(\"\\nUsing targets:\");\n    console.log(JSON.stringify(prettifyTargets(targets), null, 2));\n    console.log(`\\nUsing modules transform: ${modules.toString()}`);\n    console.log(\"\\nUsing plugins:\");\n    pluginNames.forEach(pluginName => {\n      logPlugin(pluginName, targets, compatData);\n    });\n\n    if (!useBuiltIns) {\n      console.log(\n        \"\\nUsing polyfills: No polyfills were added, since the `useBuiltIns` option was not set.\",\n      );\n    }\n  }\n\n  return { plugins };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}