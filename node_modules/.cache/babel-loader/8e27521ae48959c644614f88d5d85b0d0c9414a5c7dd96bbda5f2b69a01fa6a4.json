{"ast":null,"code":"'use strict';\n\nvar util = require('util');\nvar core = require('@babel/core');\nvar core$1 = require('@svgr/core');\nvar path = require('path');\nvar svgo = require('@svgr/plugin-svgo');\nvar jsx = require('@svgr/plugin-jsx');\nvar presetReact = require('@babel/preset-react');\nvar presetEnv = require('@babel/preset-env');\nvar presetTS = require('@babel/preset-typescript');\nvar pluginTransformReactConstantElements = require('@babel/plugin-transform-react-constant-elements');\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst babelOptions = {\n  babelrc: false,\n  configFile: false,\n  presets: [core.createConfigItem(presetReact, {\n    type: \"preset\"\n  }), core.createConfigItem([presetEnv, {\n    modules: false\n  }], {\n    type: \"preset\"\n  })],\n  plugins: [core.createConfigItem(pluginTransformReactConstantElements)]\n};\nconst typeScriptBabelOptions = __spreadProps(__spreadValues({}, babelOptions), {\n  presets: [...babelOptions.presets, core.createConfigItem([presetTS, {\n    allowNamespaces: true,\n    allExtensions: true,\n    isTSX: true\n  }], {\n    type: \"preset\"\n  })]\n});\nconst tranformSvg = util.callbackify(async (contents, options, state) => {\n  const _a = options,\n    {\n      babel = true\n    } = _a,\n    config = __objRest(_a, [\"babel\"]);\n  const jsCode = await core$1.transform(contents, config, state);\n  if (!babel) return jsCode;\n  const result = await core.transformAsync(jsCode, options.typescript ? typeScriptBabelOptions : babelOptions);\n  if (!(result == null ? void 0 : result.code)) {\n    throw new Error(`Error while transforming using Babel`);\n  }\n  return result.code;\n});\nfunction svgrLoader(contents) {\n  this.cacheable && this.cacheable();\n  const callback = this.async();\n  const options = this.getOptions();\n  const previousExport = (() => {\n    if (contents.startsWith(\"export \")) return contents;\n    const exportMatches = contents.match(/^module.exports\\s*=\\s*(.*)/);\n    return exportMatches ? `export default ${exportMatches[1]}` : null;\n  })();\n  const state = {\n    caller: {\n      name: \"@svgr/webpack\",\n      previousExport,\n      defaultPlugins: [svgo, jsx]\n    },\n    filePath: path.normalize(this.resourcePath)\n  };\n  if (!previousExport) {\n    tranformSvg(contents, options, state, callback);\n  } else {\n    this.fs.readFile(this.resourcePath, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      tranformSvg(String(result), options, state, (err2, content) => {\n        if (err2) {\n          callback(err2);\n          return;\n        }\n        callback(null, content);\n      });\n    });\n  }\n}\nmodule.exports = svgrLoader;","map":{"version":3,"names":["babelOptions","babelrc","configFile","presets","core","createConfigItem","presetReact","type","presetEnv","modules","plugins","pluginTransformReactConstantElements","typeScriptBabelOptions","__spreadProps","__spreadValues","presetTS","allowNamespaces","allExtensions","isTSX","tranformSvg","util","callbackify","contents","options","state","_a","babel","config","__objRest","jsCode","core$1","transform","result","transformAsync","typescript","code","Error","svgrLoader","cacheable","callback","async","getOptions","previousExport","startsWith","exportMatches","match","caller","name","defaultPlugins","svgo","jsx","filePath","path","normalize","resourcePath","fs","readFile","err","String","err2","content"],"sources":["C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\webpack\\src\\index.ts"],"sourcesContent":["import { callbackify } from 'util'\nimport { transformAsync, createConfigItem } from '@babel/core'\nimport { transform, Config, State } from '@svgr/core'\nimport { normalize } from 'path'\nimport svgo from '@svgr/plugin-svgo'\nimport jsx from '@svgr/plugin-jsx'\n// @ts-ignore\nimport presetReact from '@babel/preset-react'\n// @ts-ignore\nimport presetEnv from '@babel/preset-env'\n// @ts-ignore\nimport presetTS from '@babel/preset-typescript'\n// @ts-ignore\nimport pluginTransformReactConstantElements from '@babel/plugin-transform-react-constant-elements'\nimport type * as webpack from 'webpack'\n\nconst babelOptions = {\n  babelrc: false,\n  configFile: false,\n  presets: [\n    createConfigItem(presetReact, { type: 'preset' }),\n    createConfigItem([presetEnv, { modules: false }], { type: 'preset' }),\n  ],\n  plugins: [createConfigItem(pluginTransformReactConstantElements)],\n}\n\nconst typeScriptBabelOptions = {\n  ...babelOptions,\n  presets: [\n    ...babelOptions.presets,\n    createConfigItem(\n      [presetTS, { allowNamespaces: true, allExtensions: true, isTSX: true }],\n      { type: 'preset' },\n    ),\n  ],\n}\n\ninterface LoaderOptions extends Config {\n  babel?: boolean\n}\n\nconst tranformSvg = callbackify(\n  async (contents: string, options: LoaderOptions, state: Partial<State>) => {\n    const { babel = true, ...config } = options\n    const jsCode = await transform(contents, config, state)\n    if (!babel) return jsCode\n    const result = await transformAsync(\n      jsCode,\n      options.typescript ? typeScriptBabelOptions : babelOptions,\n    )\n    if (!result?.code) {\n      throw new Error(`Error while transforming using Babel`)\n    }\n    return result.code\n  },\n)\n\nfunction svgrLoader(\n  this: webpack.LoaderContext<LoaderOptions>,\n  contents: string,\n): void {\n  this.cacheable && this.cacheable()\n  const callback = this.async()\n\n  const options = this.getOptions()\n\n  const previousExport = (() => {\n    if (contents.startsWith('export ')) return contents\n    const exportMatches = contents.match(/^module.exports\\s*=\\s*(.*)/)\n    return exportMatches ? `export default ${exportMatches[1]}` : null\n  })()\n\n  const state = {\n    caller: {\n      name: '@svgr/webpack',\n      previousExport,\n      defaultPlugins: [svgo, jsx],\n    },\n    filePath: normalize(this.resourcePath),\n  }\n\n  if (!previousExport) {\n    tranformSvg(contents, options, state, callback)\n  } else {\n    this.fs.readFile(this.resourcePath, (err, result) => {\n      if (err) {\n        callback(err)\n        return\n      }\n      tranformSvg(String(result), options, state, (err, content) => {\n        if (err) {\n          callback(err)\n          return\n        }\n        callback(null, content)\n      })\n    })\n  }\n}\n\nexport default svgrLoader\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,MAAMA,YAAe;EACnBC,OAAS;EACTC,UAAY;EACZC,OAAS,GACPC,IAAA,CAAAC,gBAAiB,CAAAC,WAAA,EAAa;IAAEC,IAAA,EAAM;EAAA,CAAU,GAChDH,IAAA,CAAAC,gBAAA,CAAiB,CAACG,SAAA,EAAW;IAAEC,OAAA,EAAS;EAAM,CAAC,CAAG;IAAEF,IAAM;EAAA,CAAU,EACtE;EACAG,OAAS,GAACN,IAAA,CAAAC,gBAAiB,CAAAM,oCAAoC,CAAC;AAClE;AAEA,MAAMC,sBAAA,GAAyBC,aAAA,CAAAC,cAAA,KAC1Bd,YAD0B;EAE7BG,OAAS,GACP,GAAGH,YAAa,CAAAG,OAAA,EAChBC,IAAA,CAAAC,gBAAA,CACE,CAACU,QAAA,EAAU;IAAEC,eAAA,EAAiB;IAAMC,aAAe;IAAMC,KAAO;EAAA,CAAM,GACtE;IAAEX,IAAA,EAAM;EAAS,EACnB;AAEJ;AAMA,MAAMY,WAAc,GAAAC,IAAA,CAAAC,WAAA,CAClB,OAAOC,QAAkB,EAAAC,OAAA,EAAwBC,KAA0B;EACzE,MAAoCC,EAAA,GAAAF,OAAA;IAA5B;MAAQG,KAAA;IAAA,IAAoBD,EAAX;IAAAE,MAAA,GAAAC,SAAA,CAAWH,EAAA,EAAX,CAAjB;EACR,MAAMI,MAAS,SAAMC,MAAA,CAAAC,SAAU,CAAAT,QAAA,EAAUK,MAAA,EAAQH,KAAK;EACtD,IAAI,CAACE,KAAA,EAAc,OAAAG,MAAA;EACnB,MAAMG,MAAA,GAAS,MAAM5B,IAAA,CAAA6B,cAAA,CACnBJ,MAAA,EACAN,OAAA,CAAQW,UAAA,GAAatB,sBAAyB,GAAAZ,YAAA,CAChD;EACI,MAACgC,MAAA,oBAAAA,MAAA,CAAQG,IAAM;IACX,UAAIC,KAAA,CAA4C;EAAA;EAExD,OAAOJ,MAAO,CAAAG,IAAA;AAAA,CAElB;AAEA,SAASE,WAEPf,QACM;EACD,KAAAgB,SAAA,IAAa,KAAKA,SAAU;EAC3B,MAAAC,QAAA,GAAW,KAAKC,KAAM;EAEtB,MAAAjB,OAAA,GAAU,KAAKkB,UAAW;EAEhC,MAAMC,cAAA,IAAkB,MAAM;IACxB,IAAApB,QAAA,CAASqB,UAAA,CAAW,SAAS,GAAU,OAAArB,QAAA;IACrC,MAAAsB,aAAA,GAAgBtB,QAAS,CAAAuB,KAAA,CAAM,4BAA4B;IACjE,OAAOD,aAAgB,qBAAkBA,aAAc,EAAC,CAAM;EAAA,CAC7D;EAEH,MAAMpB,KAAQ;IACZsB,MAAQ;MACNC,IAAM;MACNL,cAAA;MACAM,cAAA,EAAgB,CAACC,IAAA,EAAMC,GAAG;IAAA,CAC5B;IACAC,QAAA,EAAUC,IAAA,CAAAC,SAAU,MAAKC,YAAY;EAAA,CACvC;EAEA,IAAI,CAACZ,cAAgB;IACPvB,WAAA,CAAAG,QAAA,EAAUC,OAAS,EAAAC,KAAA,EAAOe,QAAQ;EAAA,CACzC;IACL,KAAKgB,EAAA,CAAGC,QAAS,MAAKF,YAAc,GAACG,GAAA,EAAKzB,MAAW;MACnD,IAAIyB,GAAK;QACPlB,QAAA,CAASkB,GAAG;QACZ;MAAA;MAEFtC,WAAA,CAAYuC,MAAA,CAAO1B,MAAM,GAAGT,OAAA,EAASC,KAAO,GAACmC,IAAA,EAAKC,OAAY;QAC5D,IAAID,IAAK;UACPpB,QAAA,CAASoB,IAAG;UACZ;QAAA;QAEFpB,QAAA,CAAS,MAAMqB,OAAO;MAAA,CACvB;IAAA,CACF;EAAA;AAEL"},"metadata":{},"sourceType":"script","externalDependencies":[]}