{"ast":null,"code":"'use strict';\n\nconst {\n  detachNodeFromParent\n} = require('../lib/xast.js');\nconst {\n  collectStylesheet,\n  computeStyle\n} = require('../lib/style.js');\nconst {\n  path2js,\n  js2path,\n  intersects\n} = require('./_path.js');\nexports.name = 'mergePaths';\nexports.description = 'merges multiple paths in one if possible';\n\n/**\n * Merge multiple Paths into one.\n *\n * @author Kir Belevich, Lev Solntsev\n *\n * @type {import('./plugins-types').Plugin<'mergePaths'>}\n */\nexports.fn = (root, params) => {\n  const {\n    force = false,\n    floatPrecision,\n    noSpaceAfterFlags = false // a20 60 45 0 1 30 20 → a20 60 45 0130 20\n  } = params;\n  const stylesheet = collectStylesheet(root);\n  return {\n    element: {\n      enter: node => {\n        let prevChild = null;\n        for (const child of node.children) {\n          // skip if previous element is not path or contains animation elements\n          if (prevChild == null || prevChild.type !== 'element' || prevChild.name !== 'path' || prevChild.children.length !== 0 || prevChild.attributes.d == null) {\n            prevChild = child;\n            continue;\n          }\n\n          // skip if element is not path or contains animation elements\n          if (child.type !== 'element' || child.name !== 'path' || child.children.length !== 0 || child.attributes.d == null) {\n            prevChild = child;\n            continue;\n          }\n\n          // preserve paths with markers\n          const computedStyle = computeStyle(stylesheet, child);\n          if (computedStyle['marker-start'] || computedStyle['marker-mid'] || computedStyle['marker-end']) {\n            prevChild = child;\n            continue;\n          }\n          const prevChildAttrs = Object.keys(prevChild.attributes);\n          const childAttrs = Object.keys(child.attributes);\n          let attributesAreEqual = prevChildAttrs.length === childAttrs.length;\n          for (const name of childAttrs) {\n            if (name !== 'd') {\n              if (prevChild.attributes[name] == null || prevChild.attributes[name] !== child.attributes[name]) {\n                attributesAreEqual = false;\n              }\n            }\n          }\n          const prevPathJS = path2js(prevChild);\n          const curPathJS = path2js(child);\n          if (attributesAreEqual && (force || !intersects(prevPathJS, curPathJS))) {\n            js2path(prevChild, prevPathJS.concat(curPathJS), {\n              floatPrecision,\n              noSpaceAfterFlags\n            });\n            detachNodeFromParent(child, node);\n            continue;\n          }\n          prevChild = child;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["detachNodeFromParent","require","collectStylesheet","computeStyle","path2js","js2path","intersects","exports","name","description","fn","root","params","force","floatPrecision","noSpaceAfterFlags","stylesheet","element","enter","node","prevChild","child","children","type","length","attributes","d","computedStyle","prevChildAttrs","Object","keys","childAttrs","attributesAreEqual","prevPathJS","curPathJS","concat"],"sources":["C:/Users/AGU/Documents/trouver2/node_modules/svgo/plugins/mergePaths.js"],"sourcesContent":["'use strict';\n\nconst { detachNodeFromParent } = require('../lib/xast.js');\nconst { collectStylesheet, computeStyle } = require('../lib/style.js');\nconst { path2js, js2path, intersects } = require('./_path.js');\n\nexports.name = 'mergePaths';\nexports.description = 'merges multiple paths in one if possible';\n\n/**\n * Merge multiple Paths into one.\n *\n * @author Kir Belevich, Lev Solntsev\n *\n * @type {import('./plugins-types').Plugin<'mergePaths'>}\n */\nexports.fn = (root, params) => {\n  const {\n    force = false,\n    floatPrecision,\n    noSpaceAfterFlags = false, // a20 60 45 0 1 30 20 → a20 60 45 0130 20\n  } = params;\n  const stylesheet = collectStylesheet(root);\n\n  return {\n    element: {\n      enter: (node) => {\n        let prevChild = null;\n\n        for (const child of node.children) {\n          // skip if previous element is not path or contains animation elements\n          if (\n            prevChild == null ||\n            prevChild.type !== 'element' ||\n            prevChild.name !== 'path' ||\n            prevChild.children.length !== 0 ||\n            prevChild.attributes.d == null\n          ) {\n            prevChild = child;\n            continue;\n          }\n\n          // skip if element is not path or contains animation elements\n          if (\n            child.type !== 'element' ||\n            child.name !== 'path' ||\n            child.children.length !== 0 ||\n            child.attributes.d == null\n          ) {\n            prevChild = child;\n            continue;\n          }\n\n          // preserve paths with markers\n          const computedStyle = computeStyle(stylesheet, child);\n          if (\n            computedStyle['marker-start'] ||\n            computedStyle['marker-mid'] ||\n            computedStyle['marker-end']\n          ) {\n            prevChild = child;\n            continue;\n          }\n\n          const prevChildAttrs = Object.keys(prevChild.attributes);\n          const childAttrs = Object.keys(child.attributes);\n          let attributesAreEqual = prevChildAttrs.length === childAttrs.length;\n          for (const name of childAttrs) {\n            if (name !== 'd') {\n              if (\n                prevChild.attributes[name] == null ||\n                prevChild.attributes[name] !== child.attributes[name]\n              ) {\n                attributesAreEqual = false;\n              }\n            }\n          }\n          const prevPathJS = path2js(prevChild);\n          const curPathJS = path2js(child);\n\n          if (\n            attributesAreEqual &&\n            (force || !intersects(prevPathJS, curPathJS))\n          ) {\n            js2path(prevChild, prevPathJS.concat(curPathJS), {\n              floatPrecision,\n              noSpaceAfterFlags,\n            });\n            detachNodeFromParent(child, node);\n            continue;\n          }\n\n          prevChild = child;\n        }\n      },\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}