{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _helperDefinePolyfillProvider = _interopRequireDefault(require(\"@babel/helper-define-polyfill-provider\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst runtimeCompat = \"#__secret_key__@babel/runtime__compatibility\";\nvar _default = (0, _helperDefinePolyfillProvider.default)((_ref, options) => {\n  let {\n    debug,\n    targets,\n    babel\n  } = _ref;\n  if (!shallowEqual(targets, babel.targets())) {\n    throw new Error(\"This plugin does not use the targets option. Only preset-env's targets\" + \" or top-level targets need to be configured for this plugin to work.\" + \" See https://github.com/babel/babel-polyfills/issues/36 for more\" + \" details.\");\n  }\n  const {\n    [runtimeCompat]: {\n      useBabelRuntime = false\n    } = {}\n  } = options;\n  return {\n    name: \"regenerator\",\n    polyfills: [\"regenerator-runtime\"],\n    usageGlobal(meta, utils) {\n      if (isRegenerator(meta)) {\n        debug(\"regenerator-runtime\");\n        utils.injectGlobalImport(\"regenerator-runtime/runtime.js\");\n      }\n    },\n    usagePure(meta, utils, path) {\n      if (isRegenerator(meta)) {\n        let pureName = \"regenerator-runtime\";\n        if (useBabelRuntime) {\n          var _get;\n          const runtimeName = (_get = path.hub.file.get(\"runtimeHelpersModuleName\")) != null ? _get : \"@babel/runtime\";\n          pureName = `${runtimeName}/regenerator`;\n        }\n        path.replaceWith(utils.injectDefaultImport(pureName, \"regenerator-runtime\"));\n      }\n    }\n  };\n});\nexports.default = _default;\nconst isRegenerator = meta => meta.kind === \"global\" && meta.name === \"regeneratorRuntime\";\nfunction shallowEqual(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n}","map":{"version":3,"names":["exports","__esModule","default","_helperDefinePolyfillProvider","_interopRequireDefault","require","obj","runtimeCompat","_default","_ref","options","debug","targets","babel","shallowEqual","Error","useBabelRuntime","name","polyfills","usageGlobal","meta","utils","isRegenerator","injectGlobalImport","usagePure","path","pureName","_get","runtimeName","hub","file","get","replaceWith","injectDefaultImport","kind","obj1","obj2","JSON","stringify"],"sources":["C:/Users/AGU/Documents/trouver2/node_modules/babel-plugin-polyfill-regenerator/lib/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _helperDefinePolyfillProvider = _interopRequireDefault(require(\"@babel/helper-define-polyfill-provider\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst runtimeCompat = \"#__secret_key__@babel/runtime__compatibility\";\n\nvar _default = (0, _helperDefinePolyfillProvider.default)(({\n  debug,\n  targets,\n  babel\n}, options) => {\n  if (!shallowEqual(targets, babel.targets())) {\n    throw new Error(\"This plugin does not use the targets option. Only preset-env's targets\" + \" or top-level targets need to be configured for this plugin to work.\" + \" See https://github.com/babel/babel-polyfills/issues/36 for more\" + \" details.\");\n  }\n\n  const {\n    [runtimeCompat]: {\n      useBabelRuntime = false\n    } = {}\n  } = options;\n  return {\n    name: \"regenerator\",\n    polyfills: [\"regenerator-runtime\"],\n\n    usageGlobal(meta, utils) {\n      if (isRegenerator(meta)) {\n        debug(\"regenerator-runtime\");\n        utils.injectGlobalImport(\"regenerator-runtime/runtime.js\");\n      }\n    },\n\n    usagePure(meta, utils, path) {\n      if (isRegenerator(meta)) {\n        let pureName = \"regenerator-runtime\";\n\n        if (useBabelRuntime) {\n          var _get;\n\n          const runtimeName = (_get = path.hub.file.get(\"runtimeHelpersModuleName\")) != null ? _get : \"@babel/runtime\";\n          pureName = `${runtimeName}/regenerator`;\n        }\n\n        path.replaceWith(utils.injectDefaultImport(pureName, \"regenerator-runtime\"));\n      }\n    }\n\n  };\n});\n\nexports.default = _default;\n\nconst isRegenerator = meta => meta.kind === \"global\" && meta.name === \"regeneratorRuntime\";\n\nfunction shallowEqual(obj1, obj2) {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,6BAA6B,GAAGC,sBAAsB,CAACC,OAAO,CAAC,wCAAwC,CAAC,CAAC;AAE7G,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACL,UAAU,GAAGK,GAAG,GAAG;IAAEJ,OAAO,EAAEI;EAAI,CAAC;AAAE;AAE9F,MAAMC,aAAa,GAAG,8CAA8C;AAEpE,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAEL,6BAA6B,CAACD,OAAO,EAAE,CAAAO,IAAA,EAIvDC,OAAO,KAAK;EAAA,IAJ4C;IACzDC,KAAK;IACLC,OAAO;IACPC;EACF,CAAC,GAAAJ,IAAA;EACC,IAAI,CAACK,YAAY,CAACF,OAAO,EAAEC,KAAK,CAACD,OAAO,CAAC,CAAC,CAAC,EAAE;IAC3C,MAAM,IAAIG,KAAK,CAAC,wEAAwE,GAAG,sEAAsE,GAAG,kEAAkE,GAAG,WAAW,CAAC;EACvP;EAEA,MAAM;IACJ,CAACR,aAAa,GAAG;MACfS,eAAe,GAAG;IACpB,CAAC,GAAG,CAAC;EACP,CAAC,GAAGN,OAAO;EACX,OAAO;IACLO,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAE,CAAC,qBAAqB,CAAC;IAElCC,WAAWA,CAACC,IAAI,EAAEC,KAAK,EAAE;MACvB,IAAIC,aAAa,CAACF,IAAI,CAAC,EAAE;QACvBT,KAAK,CAAC,qBAAqB,CAAC;QAC5BU,KAAK,CAACE,kBAAkB,CAAC,gCAAgC,CAAC;MAC5D;IACF,CAAC;IAEDC,SAASA,CAACJ,IAAI,EAAEC,KAAK,EAAEI,IAAI,EAAE;MAC3B,IAAIH,aAAa,CAACF,IAAI,CAAC,EAAE;QACvB,IAAIM,QAAQ,GAAG,qBAAqB;QAEpC,IAAIV,eAAe,EAAE;UACnB,IAAIW,IAAI;UAER,MAAMC,WAAW,GAAG,CAACD,IAAI,GAAGF,IAAI,CAACI,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC,0BAA0B,CAAC,KAAK,IAAI,GAAGJ,IAAI,GAAG,gBAAgB;UAC5GD,QAAQ,GAAI,GAAEE,WAAY,cAAa;QACzC;QAEAH,IAAI,CAACO,WAAW,CAACX,KAAK,CAACY,mBAAmB,CAACP,QAAQ,EAAE,qBAAqB,CAAC,CAAC;MAC9E;IACF;EAEF,CAAC;AACH,CAAC,CAAC;AAEF1B,OAAO,CAACE,OAAO,GAAGM,QAAQ;AAE1B,MAAMc,aAAa,GAAGF,IAAI,IAAIA,IAAI,CAACc,IAAI,KAAK,QAAQ,IAAId,IAAI,CAACH,IAAI,KAAK,oBAAoB;AAE1F,SAASH,YAAYA,CAACqB,IAAI,EAAEC,IAAI,EAAE;EAChC,OAAOC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,KAAKE,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;AACtD"},"metadata":{},"sourceType":"script","externalDependencies":[]}