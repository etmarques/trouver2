{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getImportSource = getImportSource;\nexports.getRequireSource = getRequireSource;\nexports.isPolyfillSource = isPolyfillSource;\nvar _t = require(\"@babel/types\");\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isIdentifier,\n  isStringLiteral\n} = _t;\nfunction getImportSource(_ref) {\n  let {\n    node\n  } = _ref;\n  if (node.specifiers.length === 0) return node.source.value;\n}\nfunction getRequireSource(_ref2) {\n  let {\n    node\n  } = _ref2;\n  if (!isExpressionStatement(node)) return;\n  const {\n    expression\n  } = node;\n  if (isCallExpression(expression) && isIdentifier(expression.callee) && expression.callee.name === \"require\" && expression.arguments.length === 1 && isStringLiteral(expression.arguments[0])) {\n    return expression.arguments[0].value;\n  }\n}\nfunction isPolyfillSource(source) {\n  return source === \"@babel/polyfill\" || source === \"core-js\";\n}","map":{"version":3,"names":["_t","require","isCallExpression","isExpressionStatement","isIdentifier","isStringLiteral","getImportSource","_ref","node","specifiers","length","source","value","getRequireSource","_ref2","expression","callee","name","arguments","isPolyfillSource"],"sources":["C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@babel\\preset-env\\src\\polyfills\\utils.ts"],"sourcesContent":["import {\n  isCallExpression,\n  isExpressionStatement,\n  isIdentifier,\n  isStringLiteral,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { NodePath } from \"@babel/traverse\";\n\nexport function getImportSource({ node }: NodePath<t.ImportDeclaration>) {\n  if (node.specifiers.length === 0) return node.source.value;\n}\n\nexport function getRequireSource({ node }: NodePath) {\n  if (!isExpressionStatement(node)) return;\n  const { expression } = node;\n  if (\n    isCallExpression(expression) &&\n    isIdentifier(expression.callee) &&\n    expression.callee.name === \"require\" &&\n    expression.arguments.length === 1 &&\n    isStringLiteral(expression.arguments[0])\n  ) {\n    return expression.arguments[0].value;\n  }\n}\n\nexport function isPolyfillSource(source?: string | null): boolean {\n  return source === \"@babel/polyfill\" || source === \"core-js\";\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,EAAA,GAAAC,OAAA;AAKsB;EAJpBC,gBAAgB;EAChBC,qBAAqB;EACrBC,YAAY;EACZC;AAAe,IAAAL,EAAA;AAKV,SAASM,eAAeA,CAAAC,IAAA,EAA0C;EAAA,IAAzC;IAAEC;EAAoC,CAAC,GAAAD,IAAA;EACrE,IAAIC,IAAI,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOF,IAAI,CAACG,MAAM,CAACC,KAAK;AAC5D;AAEO,SAASC,gBAAgBA,CAAAC,KAAA,EAAqB;EAAA,IAApB;IAAEN;EAAe,CAAC,GAAAM,KAAA;EACjD,IAAI,CAACX,qBAAqB,CAACK,IAAI,CAAC,EAAE;EAClC,MAAM;IAAEO;EAAW,CAAC,GAAGP,IAAI;EAC3B,IACEN,gBAAgB,CAACa,UAAU,CAAC,IAC5BX,YAAY,CAACW,UAAU,CAACC,MAAM,CAAC,IAC/BD,UAAU,CAACC,MAAM,CAACC,IAAI,KAAK,SAAS,IACpCF,UAAU,CAACG,SAAS,CAACR,MAAM,KAAK,CAAC,IACjCL,eAAe,CAACU,UAAU,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC,EACxC;IACA,OAAOH,UAAU,CAACG,SAAS,CAAC,CAAC,CAAC,CAACN,KAAK;EACtC;AACF;AAEO,SAASO,gBAAgBA,CAACR,MAAsB,EAAW;EAChE,OAAOA,MAAM,KAAK,iBAAiB,IAAIA,MAAM,KAAK,SAAS;AAC7D"},"metadata":{},"sourceType":"script","externalDependencies":[]}