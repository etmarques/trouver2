{"ast":null,"code":"'use strict';\n\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\nconst {\n  detachNodeFromParent\n} = require('../lib/xast.js');\nconst {\n  elemsGroups\n} = require('./_collections.js');\nexports.name = 'removeUselessDefs';\nexports.description = 'removes elements in <defs> without id';\n\n/**\n * Removes content of defs and properties that aren't rendered directly without ids.\n *\n * @author Lev Solntsev\n *\n * @type {import('./plugins-types').Plugin<'removeUselessDefs'>}\n */\nexports.fn = () => {\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        if (node.name === 'defs') {\n          /**\n           * @type {Array<XastElement>}\n           */\n          const usefulNodes = [];\n          collectUsefulNodes(node, usefulNodes);\n          if (usefulNodes.length === 0) {\n            detachNodeFromParent(node, parentNode);\n          }\n          // TODO remove legacy parentNode in v4\n          for (const usefulNode of usefulNodes) {\n            Object.defineProperty(usefulNode, 'parentNode', {\n              writable: true,\n              value: node\n            });\n          }\n          node.children = usefulNodes;\n        } else if (elemsGroups.nonRendering.includes(node.name) && node.attributes.id == null) {\n          detachNodeFromParent(node, parentNode);\n        }\n      }\n    }\n  };\n};\n\n/**\n * @type {(node: XastElement, usefulNodes: Array<XastElement>) => void}\n */\nconst collectUsefulNodes = (node, usefulNodes) => {\n  for (const child of node.children) {\n    if (child.type === 'element') {\n      if (child.attributes.id != null || child.name === 'style') {\n        usefulNodes.push(child);\n      } else {\n        collectUsefulNodes(child, usefulNodes);\n      }\n    }\n  }\n};","map":{"version":3,"names":["detachNodeFromParent","require","elemsGroups","exports","name","description","fn","element","enter","node","parentNode","usefulNodes","collectUsefulNodes","length","usefulNode","Object","defineProperty","writable","value","children","nonRendering","includes","attributes","id","child","type","push"],"sources":["C:/Users/AGU/Documents/trouver2/node_modules/svgo/plugins/removeUselessDefs.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\n\nconst { detachNodeFromParent } = require('../lib/xast.js');\nconst { elemsGroups } = require('./_collections.js');\n\nexports.name = 'removeUselessDefs';\nexports.description = 'removes elements in <defs> without id';\n\n/**\n * Removes content of defs and properties that aren't rendered directly without ids.\n *\n * @author Lev Solntsev\n *\n * @type {import('./plugins-types').Plugin<'removeUselessDefs'>}\n */\nexports.fn = () => {\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        if (node.name === 'defs') {\n          /**\n           * @type {Array<XastElement>}\n           */\n          const usefulNodes = [];\n          collectUsefulNodes(node, usefulNodes);\n          if (usefulNodes.length === 0) {\n            detachNodeFromParent(node, parentNode);\n          }\n          // TODO remove legacy parentNode in v4\n          for (const usefulNode of usefulNodes) {\n            Object.defineProperty(usefulNode, 'parentNode', {\n              writable: true,\n              value: node,\n            });\n          }\n          node.children = usefulNodes;\n        } else if (\n          elemsGroups.nonRendering.includes(node.name) &&\n          node.attributes.id == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n        }\n      },\n    },\n  };\n};\n\n/**\n * @type {(node: XastElement, usefulNodes: Array<XastElement>) => void}\n */\nconst collectUsefulNodes = (node, usefulNodes) => {\n  for (const child of node.children) {\n    if (child.type === 'element') {\n      if (child.attributes.id != null || child.name === 'style') {\n        usefulNodes.push(child);\n      } else {\n        collectUsefulNodes(child, usefulNodes);\n      }\n    }\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAM;EAAEA;AAAqB,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC1D,MAAM;EAAEC;AAAY,CAAC,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAEpDE,OAAO,CAACC,IAAI,GAAG,mBAAmB;AAClCD,OAAO,CAACE,WAAW,GAAG,uCAAuC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,OAAO,CAACG,EAAE,GAAG,MAAM;EACjB,OAAO;IACLC,OAAO,EAAE;MACPC,KAAK,EAAEA,CAACC,IAAI,EAAEC,UAAU,KAAK;QAC3B,IAAID,IAAI,CAACL,IAAI,KAAK,MAAM,EAAE;UACxB;AACV;AACA;UACU,MAAMO,WAAW,GAAG,EAAE;UACtBC,kBAAkB,CAACH,IAAI,EAAEE,WAAW,CAAC;UACrC,IAAIA,WAAW,CAACE,MAAM,KAAK,CAAC,EAAE;YAC5Bb,oBAAoB,CAACS,IAAI,EAAEC,UAAU,CAAC;UACxC;UACA;UACA,KAAK,MAAMI,UAAU,IAAIH,WAAW,EAAE;YACpCI,MAAM,CAACC,cAAc,CAACF,UAAU,EAAE,YAAY,EAAE;cAC9CG,QAAQ,EAAE,IAAI;cACdC,KAAK,EAAET;YACT,CAAC,CAAC;UACJ;UACAA,IAAI,CAACU,QAAQ,GAAGR,WAAW;QAC7B,CAAC,MAAM,IACLT,WAAW,CAACkB,YAAY,CAACC,QAAQ,CAACZ,IAAI,CAACL,IAAI,CAAC,IAC5CK,IAAI,CAACa,UAAU,CAACC,EAAE,IAAI,IAAI,EAC1B;UACAvB,oBAAoB,CAACS,IAAI,EAAEC,UAAU,CAAC;QACxC;MACF;IACF;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,MAAME,kBAAkB,GAAGA,CAACH,IAAI,EAAEE,WAAW,KAAK;EAChD,KAAK,MAAMa,KAAK,IAAIf,IAAI,CAACU,QAAQ,EAAE;IACjC,IAAIK,KAAK,CAACC,IAAI,KAAK,SAAS,EAAE;MAC5B,IAAID,KAAK,CAACF,UAAU,CAACC,EAAE,IAAI,IAAI,IAAIC,KAAK,CAACpB,IAAI,KAAK,OAAO,EAAE;QACzDO,WAAW,CAACe,IAAI,CAACF,KAAK,CAAC;MACzB,CAAC,MAAM;QACLZ,kBAAkB,CAACY,KAAK,EAAEb,WAAW,CAAC;MACxC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}