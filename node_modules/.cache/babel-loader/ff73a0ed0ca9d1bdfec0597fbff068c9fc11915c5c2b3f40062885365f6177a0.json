{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _helperRemapAsyncToGenerator = require(\"@babel/helper-remap-async-to-generator\");\nvar _pluginSyntaxAsyncGenerators = require(\"@babel/plugin-syntax-async-generators\");\nvar _core = require(\"@babel/core\");\nvar _forAwait = require(\"./for-await\");\nvar _helperEnvironmentVisitor = require(\"@babel/helper-environment-visitor\");\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  const yieldStarVisitor = _core.traverse.visitors.merge([{\n    ArrowFunctionExpression(path) {\n      path.skip();\n    },\n    YieldExpression(_ref, state) {\n      let {\n        node\n      } = _ref;\n      if (!node.delegate) return;\n      const asyncIter = _core.types.callExpression(state.addHelper(\"asyncIterator\"), [node.argument]);\n      node.argument = _core.types.callExpression(state.addHelper(\"asyncGeneratorDelegate\"), [asyncIter, state.addHelper(\"awaitAsyncGenerator\")]);\n    }\n  }, _helperEnvironmentVisitor.default]);\n  const forAwaitVisitor = _core.traverse.visitors.merge([{\n    ArrowFunctionExpression(path) {\n      path.skip();\n    },\n    ForOfStatement(path, _ref2) {\n      let {\n        file\n      } = _ref2;\n      const {\n        node\n      } = path;\n      if (!node.await) return;\n      const build = (0, _forAwait.default)(path, {\n        getAsyncIterator: file.addHelper(\"asyncIterator\")\n      });\n      const {\n        declar,\n        loop\n      } = build;\n      const block = loop.body;\n      path.ensureBlock();\n      if (declar) {\n        block.body.push(declar);\n        if (path.node.body.body.length) {\n          block.body.push(_core.types.blockStatement(path.node.body.body));\n        }\n      } else {\n        block.body.push(...path.node.body.body);\n      }\n      _core.types.inherits(loop, node);\n      _core.types.inherits(loop.body, node.body);\n      const p = build.replaceParent ? path.parentPath : path;\n      p.replaceWithMultiple(build.node);\n      p.scope.parent.crawl();\n    }\n  }, _helperEnvironmentVisitor.default]);\n  const visitor = {\n    Function(path, state) {\n      if (!path.node.async) return;\n      path.traverse(forAwaitVisitor, state);\n      if (!path.node.generator) return;\n      path.traverse(yieldStarVisitor, state);\n      (0, _helperRemapAsyncToGenerator.default)(path, {\n        wrapAsync: state.addHelper(\"wrapAsyncGenerator\"),\n        wrapAwait: state.addHelper(\"awaitAsyncGenerator\")\n      });\n    }\n  };\n  return {\n    name: \"transform-async-generator-functions\",\n    inherits: _pluginSyntaxAsyncGenerators.default,\n    visitor: {\n      Program(path, state) {\n        path.traverse(visitor, state);\n      }\n    }\n  };\n});\nexports.default = _default;","map":{"version":3,"names":["_helperPluginUtils","require","_helperRemapAsyncToGenerator","_pluginSyntaxAsyncGenerators","_core","_forAwait","_helperEnvironmentVisitor","_default","declare","api","assertVersion","yieldStarVisitor","traverse","visitors","merge","ArrowFunctionExpression","path","skip","YieldExpression","_ref","state","node","delegate","asyncIter","types","callExpression","addHelper","argument","default","forAwaitVisitor","ForOfStatement","_ref2","file","await","build","getAsyncIterator","declar","loop","block","body","ensureBlock","push","length","blockStatement","inherits","p","replaceParent","parentPath","replaceWithMultiple","scope","parent","crawl","visitor","Function","async","generator","wrapAsync","wrapAwait","name","Program","exports"],"sources":["C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@babel\\plugin-transform-async-generator-functions\\src\\index.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\";\nimport remapAsyncToGenerator from \"@babel/helper-remap-async-to-generator\";\nimport syntaxAsyncGenerators from \"@babel/plugin-syntax-async-generators\";\nimport type { NodePath, Visitor } from \"@babel/traverse\";\nimport { traverse, types as t, type PluginPass } from \"@babel/core\";\nimport rewriteForAwait from \"./for-await\";\nimport environmentVisitor from \"@babel/helper-environment-visitor\";\n\nexport default declare(api => {\n  api.assertVersion(7);\n\n  const yieldStarVisitor = traverse.visitors.merge<PluginPass>([\n    {\n      ArrowFunctionExpression(path) {\n        path.skip();\n      },\n\n      YieldExpression({ node }, state) {\n        if (!node.delegate) return;\n        const asyncIter = t.callExpression(state.addHelper(\"asyncIterator\"), [\n          node.argument,\n        ]);\n        node.argument = t.callExpression(\n          state.addHelper(\"asyncGeneratorDelegate\"),\n          process.env.BABEL_8_BREAKING\n            ? [asyncIter]\n            : [asyncIter, state.addHelper(\"awaitAsyncGenerator\")],\n        );\n      },\n    },\n    environmentVisitor,\n  ]);\n\n  const forAwaitVisitor = traverse.visitors.merge<PluginPass>([\n    {\n      ArrowFunctionExpression(path) {\n        path.skip();\n      },\n\n      ForOfStatement(path: NodePath<t.ForOfStatement>, { file }) {\n        const { node } = path;\n        if (!node.await) return;\n\n        const build = rewriteForAwait(path, {\n          getAsyncIterator: file.addHelper(\"asyncIterator\"),\n        });\n\n        const { declar, loop } = build;\n        const block = loop.body as t.BlockStatement;\n\n        // ensure that it's a block so we can take all its statements\n        path.ensureBlock();\n\n        // add the value declaration to the new loop body\n        if (declar) {\n          block.body.push(declar);\n          if (path.node.body.body.length) {\n            block.body.push(t.blockStatement(path.node.body.body));\n          }\n        } else {\n          block.body.push(...path.node.body.body);\n        }\n\n        t.inherits(loop, node);\n        t.inherits(loop.body, node.body);\n\n        const p = build.replaceParent ? path.parentPath : path;\n        p.replaceWithMultiple(build.node);\n\n        // TODO: Avoid crawl\n        p.scope.parent.crawl();\n      },\n    },\n    environmentVisitor,\n  ]);\n\n  const visitor: Visitor<PluginPass> = {\n    Function(path, state) {\n      if (!path.node.async) return;\n\n      path.traverse(forAwaitVisitor, state);\n\n      if (!path.node.generator) return;\n\n      path.traverse(yieldStarVisitor, state);\n\n      // We don't need to pass the noNewArrows assumption, since\n      // async generators are never arrow functions.\n      remapAsyncToGenerator(path, {\n        wrapAsync: state.addHelper(\"wrapAsyncGenerator\"),\n        wrapAwait: state.addHelper(\"awaitAsyncGenerator\"),\n      });\n    },\n  };\n\n  return {\n    name: \"transform-async-generator-functions\",\n    inherits: syntaxAsyncGenerators.default,\n\n    visitor: {\n      Program(path, state) {\n        // We need to traverse the ast here (instead of just vising Function\n        // in the top level visitor) because for-await needs to run before the\n        // async-to-generator plugin. This is because for-await is transpiled\n        // using \"await\" expressions, which are then converted to \"yield\".\n        //\n        // This is bad for performance, but plugin ordering will allow as to\n        // directly visit Function in the top level visitor.\n        path.traverse(visitor, state);\n      },\n    },\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}