{"ast":null,"code":"'use strict';\n\nvar t = require('@babel/types');\nvar entities = require('entities');\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\nvar t__namespace = /*#__PURE__*/_interopNamespaceDefault(t);\nconst one = (h, node, parent) => {\n  const type = node && node.type;\n  const fn = h.handlers[type];\n  if (!type) {\n    throw new Error(`Expected node, got \\`${node}\\``);\n  }\n  if (!fn) {\n    throw new Error(`Node of type ${type} is unknown`);\n  }\n  return fn(h, node, parent);\n};\nconst all = (helpers, parent) => {\n  const nodes = parent.children || [];\n  const {\n    length\n  } = nodes;\n  const values = [];\n  let index = -1;\n  while (++index < length) {\n    const node = nodes[index];\n    if (typeof node !== \"string\") {\n      const result = one(helpers, node, parent);\n      values.push(result);\n    }\n  }\n  return values.filter(Boolean);\n};\nconst isNumeric = value => {\n  return !Number.isNaN(value - parseFloat(value));\n};\nconst hyphenToCamelCase = string => {\n  return string.replace(/-(.)/g, (_, chr) => chr.toUpperCase());\n};\nconst trimEnd = (haystack, needle) => {\n  return haystack.endsWith(needle) ? haystack.slice(0, -needle.length) : haystack;\n};\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g;\nconst kebabCase = str => {\n  return str.replace(KEBAB_REGEX, match => `-${match.toLowerCase()}`);\n};\nconst SPACES_REGEXP = /[\\t\\r\\n\\u0085\\u2028\\u2029]+/g;\nconst replaceSpaces = str => {\n  return str.replace(SPACES_REGEXP, \" \");\n};\nconst PX_REGEX = /^\\d+px$/;\nconst MS_REGEX = /^-ms-/;\nconst VAR_REGEX = /^--/;\nconst isConvertiblePixelValue = value => {\n  return PX_REGEX.test(value);\n};\nconst formatKey = key => {\n  if (VAR_REGEX.test(key)) {\n    return t__namespace.stringLiteral(key);\n  }\n  key = key.toLowerCase();\n  if (MS_REGEX.test(key)) key = key.substr(1);\n  return t__namespace.identifier(hyphenToCamelCase(key));\n};\nconst formatValue = value => {\n  if (isNumeric(value)) return t__namespace.numericLiteral(Number(value));\n  if (isConvertiblePixelValue(value)) return t__namespace.numericLiteral(Number(trimEnd(value, \"px\")));\n  return t__namespace.stringLiteral(value);\n};\nconst stringToObjectStyle = rawStyle => {\n  const entries = rawStyle.split(\";\");\n  const properties = [];\n  let index = -1;\n  while (++index < entries.length) {\n    const entry = entries[index];\n    const style = entry.trim();\n    const firstColon = style.indexOf(\":\");\n    const value = style.substr(firstColon + 1).trim();\n    const key = style.substr(0, firstColon);\n    if (key !== \"\") {\n      const property = t__namespace.objectProperty(formatKey(key), formatValue(value));\n      properties.push(property);\n    }\n  }\n  return t__namespace.objectExpression(properties);\n};\nconst ATTRIBUTE_MAPPING = {\n  // HTML\n  accept: \"accept\",\n  acceptcharset: \"acceptCharset\",\n  \"accept-charset\": \"acceptCharset\",\n  accesskey: \"accessKey\",\n  action: \"action\",\n  allowfullscreen: \"allowFullScreen\",\n  alt: \"alt\",\n  as: \"as\",\n  async: \"async\",\n  autocapitalize: \"autoCapitalize\",\n  autocomplete: \"autoComplete\",\n  autocorrect: \"autoCorrect\",\n  autofocus: \"autoFocus\",\n  autoplay: \"autoPlay\",\n  autosave: \"autoSave\",\n  capture: \"capture\",\n  cellpadding: \"cellPadding\",\n  cellspacing: \"cellSpacing\",\n  challenge: \"challenge\",\n  charset: \"charSet\",\n  checked: \"checked\",\n  children: \"children\",\n  cite: \"cite\",\n  class: \"className\",\n  classid: \"classID\",\n  classname: \"className\",\n  cols: \"cols\",\n  colspan: \"colSpan\",\n  content: \"content\",\n  contenteditable: \"contentEditable\",\n  contextmenu: \"contextMenu\",\n  controls: \"controls\",\n  controlslist: \"controlsList\",\n  coords: \"coords\",\n  crossorigin: \"crossOrigin\",\n  dangerouslysetinnerhtml: \"dangerouslySetInnerHTML\",\n  data: \"data\",\n  datetime: \"dateTime\",\n  default: \"default\",\n  defaultchecked: \"defaultChecked\",\n  defaultvalue: \"defaultValue\",\n  defer: \"defer\",\n  dir: \"dir\",\n  disabled: \"disabled\",\n  download: \"download\",\n  draggable: \"draggable\",\n  enctype: \"encType\",\n  for: \"htmlFor\",\n  form: \"form\",\n  formmethod: \"formMethod\",\n  formaction: \"formAction\",\n  formenctype: \"formEncType\",\n  formnovalidate: \"formNoValidate\",\n  formtarget: \"formTarget\",\n  frameborder: \"frameBorder\",\n  headers: \"headers\",\n  height: \"height\",\n  hidden: \"hidden\",\n  high: \"high\",\n  href: \"href\",\n  hreflang: \"hrefLang\",\n  htmlfor: \"htmlFor\",\n  httpequiv: \"httpEquiv\",\n  \"http-equiv\": \"httpEquiv\",\n  icon: \"icon\",\n  id: \"id\",\n  innerhtml: \"innerHTML\",\n  inputmode: \"inputMode\",\n  integrity: \"integrity\",\n  is: \"is\",\n  itemid: \"itemID\",\n  itemprop: \"itemProp\",\n  itemref: \"itemRef\",\n  itemscope: \"itemScope\",\n  itemtype: \"itemType\",\n  keyparams: \"keyParams\",\n  keytype: \"keyType\",\n  kind: \"kind\",\n  label: \"label\",\n  lang: \"lang\",\n  list: \"list\",\n  loop: \"loop\",\n  low: \"low\",\n  manifest: \"manifest\",\n  marginwidth: \"marginWidth\",\n  marginheight: \"marginHeight\",\n  max: \"max\",\n  maxlength: \"maxLength\",\n  media: \"media\",\n  mediagroup: \"mediaGroup\",\n  method: \"method\",\n  min: \"min\",\n  minlength: \"minLength\",\n  multiple: \"multiple\",\n  muted: \"muted\",\n  name: \"name\",\n  nomodule: \"noModule\",\n  nonce: \"nonce\",\n  novalidate: \"noValidate\",\n  open: \"open\",\n  optimum: \"optimum\",\n  pattern: \"pattern\",\n  placeholder: \"placeholder\",\n  playsinline: \"playsInline\",\n  poster: \"poster\",\n  preload: \"preload\",\n  profile: \"profile\",\n  radiogroup: \"radioGroup\",\n  readonly: \"readOnly\",\n  referrerpolicy: \"referrerPolicy\",\n  rel: \"rel\",\n  required: \"required\",\n  reversed: \"reversed\",\n  role: \"role\",\n  rows: \"rows\",\n  rowspan: \"rowSpan\",\n  sandbox: \"sandbox\",\n  scope: \"scope\",\n  scoped: \"scoped\",\n  scrolling: \"scrolling\",\n  seamless: \"seamless\",\n  selected: \"selected\",\n  shape: \"shape\",\n  size: \"size\",\n  sizes: \"sizes\",\n  span: \"span\",\n  spellcheck: \"spellCheck\",\n  src: \"src\",\n  srcdoc: \"srcDoc\",\n  srclang: \"srcLang\",\n  srcset: \"srcSet\",\n  start: \"start\",\n  step: \"step\",\n  style: \"style\",\n  summary: \"summary\",\n  tabindex: \"tabIndex\",\n  target: \"target\",\n  title: \"title\",\n  type: \"type\",\n  usemap: \"useMap\",\n  value: \"value\",\n  width: \"width\",\n  wmode: \"wmode\",\n  wrap: \"wrap\",\n  // SVG\n  about: \"about\",\n  accentheight: \"accentHeight\",\n  \"accent-height\": \"accentHeight\",\n  accumulate: \"accumulate\",\n  additive: \"additive\",\n  alignmentbaseline: \"alignmentBaseline\",\n  \"alignment-baseline\": \"alignmentBaseline\",\n  allowreorder: \"allowReorder\",\n  alphabetic: \"alphabetic\",\n  amplitude: \"amplitude\",\n  arabicform: \"arabicForm\",\n  \"arabic-form\": \"arabicForm\",\n  ascent: \"ascent\",\n  attributename: \"attributeName\",\n  attributetype: \"attributeType\",\n  autoreverse: \"autoReverse\",\n  azimuth: \"azimuth\",\n  basefrequency: \"baseFrequency\",\n  baselineshift: \"baselineShift\",\n  \"baseline-shift\": \"baselineShift\",\n  baseprofile: \"baseProfile\",\n  bbox: \"bbox\",\n  begin: \"begin\",\n  bias: \"bias\",\n  by: \"by\",\n  calcmode: \"calcMode\",\n  capheight: \"capHeight\",\n  \"cap-height\": \"capHeight\",\n  clip: \"clip\",\n  clippath: \"clipPath\",\n  \"clip-path\": \"clipPath\",\n  clippathunits: \"clipPathUnits\",\n  cliprule: \"clipRule\",\n  \"clip-rule\": \"clipRule\",\n  color: \"color\",\n  colorinterpolation: \"colorInterpolation\",\n  \"color-interpolation\": \"colorInterpolation\",\n  colorinterpolationfilters: \"colorInterpolationFilters\",\n  \"color-interpolation-filters\": \"colorInterpolationFilters\",\n  colorprofile: \"colorProfile\",\n  \"color-profile\": \"colorProfile\",\n  colorrendering: \"colorRendering\",\n  \"color-rendering\": \"colorRendering\",\n  contentscripttype: \"contentScriptType\",\n  contentstyletype: \"contentStyleType\",\n  cursor: \"cursor\",\n  cx: \"cx\",\n  cy: \"cy\",\n  d: \"d\",\n  datatype: \"datatype\",\n  decelerate: \"decelerate\",\n  descent: \"descent\",\n  diffuseconstant: \"diffuseConstant\",\n  direction: \"direction\",\n  display: \"display\",\n  divisor: \"divisor\",\n  dominantbaseline: \"dominantBaseline\",\n  \"dominant-baseline\": \"dominantBaseline\",\n  dur: \"dur\",\n  dx: \"dx\",\n  dy: \"dy\",\n  edgemode: \"edgeMode\",\n  elevation: \"elevation\",\n  enablebackground: \"enableBackground\",\n  \"enable-background\": \"enableBackground\",\n  end: \"end\",\n  exponent: \"exponent\",\n  externalresourcesrequired: \"externalResourcesRequired\",\n  fill: \"fill\",\n  fillopacity: \"fillOpacity\",\n  \"fill-opacity\": \"fillOpacity\",\n  fillrule: \"fillRule\",\n  \"fill-rule\": \"fillRule\",\n  filter: \"filter\",\n  filterres: \"filterRes\",\n  filterunits: \"filterUnits\",\n  floodopacity: \"floodOpacity\",\n  \"flood-opacity\": \"floodOpacity\",\n  floodcolor: \"floodColor\",\n  \"flood-color\": \"floodColor\",\n  focusable: \"focusable\",\n  fontfamily: \"fontFamily\",\n  \"font-family\": \"fontFamily\",\n  fontsize: \"fontSize\",\n  \"font-size\": \"fontSize\",\n  fontsizeadjust: \"fontSizeAdjust\",\n  \"font-size-adjust\": \"fontSizeAdjust\",\n  fontstretch: \"fontStretch\",\n  \"font-stretch\": \"fontStretch\",\n  fontstyle: \"fontStyle\",\n  \"font-style\": \"fontStyle\",\n  fontvariant: \"fontVariant\",\n  \"font-variant\": \"fontVariant\",\n  fontweight: \"fontWeight\",\n  \"font-weight\": \"fontWeight\",\n  format: \"format\",\n  from: \"from\",\n  fx: \"fx\",\n  fy: \"fy\",\n  g1: \"g1\",\n  g2: \"g2\",\n  glyphname: \"glyphName\",\n  \"glyph-name\": \"glyphName\",\n  glyphorientationhorizontal: \"glyphOrientationHorizontal\",\n  \"glyph-orientation-horizontal\": \"glyphOrientationHorizontal\",\n  glyphorientationvertical: \"glyphOrientationVertical\",\n  \"glyph-orientation-vertical\": \"glyphOrientationVertical\",\n  glyphref: \"glyphRef\",\n  gradienttransform: \"gradientTransform\",\n  gradientunits: \"gradientUnits\",\n  hanging: \"hanging\",\n  horizadvx: \"horizAdvX\",\n  \"horiz-adv-x\": \"horizAdvX\",\n  horizoriginx: \"horizOriginX\",\n  \"horiz-origin-x\": \"horizOriginX\",\n  ideographic: \"ideographic\",\n  imagerendering: \"imageRendering\",\n  \"image-rendering\": \"imageRendering\",\n  in2: \"in2\",\n  in: \"in\",\n  inlist: \"inlist\",\n  intercept: \"intercept\",\n  k1: \"k1\",\n  k2: \"k2\",\n  k3: \"k3\",\n  k4: \"k4\",\n  k: \"k\",\n  kernelmatrix: \"kernelMatrix\",\n  kernelunitlength: \"kernelUnitLength\",\n  kerning: \"kerning\",\n  keypoints: \"keyPoints\",\n  keysplines: \"keySplines\",\n  keytimes: \"keyTimes\",\n  lengthadjust: \"lengthAdjust\",\n  letterspacing: \"letterSpacing\",\n  \"letter-spacing\": \"letterSpacing\",\n  lightingcolor: \"lightingColor\",\n  \"lighting-color\": \"lightingColor\",\n  limitingconeangle: \"limitingConeAngle\",\n  local: \"local\",\n  markerend: \"markerEnd\",\n  \"marker-end\": \"markerEnd\",\n  markerheight: \"markerHeight\",\n  markermid: \"markerMid\",\n  \"marker-mid\": \"markerMid\",\n  markerstart: \"markerStart\",\n  \"marker-start\": \"markerStart\",\n  markerunits: \"markerUnits\",\n  markerwidth: \"markerWidth\",\n  mask: \"mask\",\n  maskcontentunits: \"maskContentUnits\",\n  maskunits: \"maskUnits\",\n  mathematical: \"mathematical\",\n  mode: \"mode\",\n  numoctaves: \"numOctaves\",\n  offset: \"offset\",\n  opacity: \"opacity\",\n  operator: \"operator\",\n  order: \"order\",\n  orient: \"orient\",\n  orientation: \"orientation\",\n  origin: \"origin\",\n  overflow: \"overflow\",\n  overlineposition: \"overlinePosition\",\n  \"overline-position\": \"overlinePosition\",\n  overlinethickness: \"overlineThickness\",\n  \"overline-thickness\": \"overlineThickness\",\n  paintorder: \"paintOrder\",\n  \"paint-order\": \"paintOrder\",\n  panose1: \"panose1\",\n  \"panose-1\": \"panose1\",\n  pathlength: \"pathLength\",\n  patterncontentunits: \"patternContentUnits\",\n  patterntransform: \"patternTransform\",\n  patternunits: \"patternUnits\",\n  pointerevents: \"pointerEvents\",\n  \"pointer-events\": \"pointerEvents\",\n  points: \"points\",\n  pointsatx: \"pointsAtX\",\n  pointsaty: \"pointsAtY\",\n  pointsatz: \"pointsAtZ\",\n  prefix: \"prefix\",\n  preservealpha: \"preserveAlpha\",\n  preserveaspectratio: \"preserveAspectRatio\",\n  primitiveunits: \"primitiveUnits\",\n  property: \"property\",\n  r: \"r\",\n  radius: \"radius\",\n  refx: \"refX\",\n  refy: \"refY\",\n  renderingintent: \"renderingIntent\",\n  \"rendering-intent\": \"renderingIntent\",\n  repeatcount: \"repeatCount\",\n  repeatdur: \"repeatDur\",\n  requiredextensions: \"requiredExtensions\",\n  requiredfeatures: \"requiredFeatures\",\n  resource: \"resource\",\n  restart: \"restart\",\n  result: \"result\",\n  results: \"results\",\n  rotate: \"rotate\",\n  rx: \"rx\",\n  ry: \"ry\",\n  scale: \"scale\",\n  security: \"security\",\n  seed: \"seed\",\n  shaperendering: \"shapeRendering\",\n  \"shape-rendering\": \"shapeRendering\",\n  slope: \"slope\",\n  spacing: \"spacing\",\n  specularconstant: \"specularConstant\",\n  specularexponent: \"specularExponent\",\n  speed: \"speed\",\n  spreadmethod: \"spreadMethod\",\n  startoffset: \"startOffset\",\n  stddeviation: \"stdDeviation\",\n  stemh: \"stemh\",\n  stemv: \"stemv\",\n  stitchtiles: \"stitchTiles\",\n  stopcolor: \"stopColor\",\n  \"stop-color\": \"stopColor\",\n  stopopacity: \"stopOpacity\",\n  \"stop-opacity\": \"stopOpacity\",\n  strikethroughposition: \"strikethroughPosition\",\n  \"strikethrough-position\": \"strikethroughPosition\",\n  strikethroughthickness: \"strikethroughThickness\",\n  \"strikethrough-thickness\": \"strikethroughThickness\",\n  string: \"string\",\n  stroke: \"stroke\",\n  strokedasharray: \"strokeDasharray\",\n  \"stroke-dasharray\": \"strokeDasharray\",\n  strokedashoffset: \"strokeDashoffset\",\n  \"stroke-dashoffset\": \"strokeDashoffset\",\n  strokelinecap: \"strokeLinecap\",\n  \"stroke-linecap\": \"strokeLinecap\",\n  strokelinejoin: \"strokeLinejoin\",\n  \"stroke-linejoin\": \"strokeLinejoin\",\n  strokemiterlimit: \"strokeMiterlimit\",\n  \"stroke-miterlimit\": \"strokeMiterlimit\",\n  strokewidth: \"strokeWidth\",\n  \"stroke-width\": \"strokeWidth\",\n  strokeopacity: \"strokeOpacity\",\n  \"stroke-opacity\": \"strokeOpacity\",\n  suppresscontenteditablewarning: \"suppressContentEditableWarning\",\n  suppresshydrationwarning: \"suppressHydrationWarning\",\n  surfacescale: \"surfaceScale\",\n  systemlanguage: \"systemLanguage\",\n  tablevalues: \"tableValues\",\n  targetx: \"targetX\",\n  targety: \"targetY\",\n  textanchor: \"textAnchor\",\n  \"text-anchor\": \"textAnchor\",\n  textdecoration: \"textDecoration\",\n  \"text-decoration\": \"textDecoration\",\n  textlength: \"textLength\",\n  textrendering: \"textRendering\",\n  \"text-rendering\": \"textRendering\",\n  to: \"to\",\n  transform: \"transform\",\n  typeof: \"typeof\",\n  u1: \"u1\",\n  u2: \"u2\",\n  underlineposition: \"underlinePosition\",\n  \"underline-position\": \"underlinePosition\",\n  underlinethickness: \"underlineThickness\",\n  \"underline-thickness\": \"underlineThickness\",\n  unicode: \"unicode\",\n  unicodebidi: \"unicodeBidi\",\n  \"unicode-bidi\": \"unicodeBidi\",\n  unicoderange: \"unicodeRange\",\n  \"unicode-range\": \"unicodeRange\",\n  unitsperem: \"unitsPerEm\",\n  \"units-per-em\": \"unitsPerEm\",\n  unselectable: \"unselectable\",\n  valphabetic: \"vAlphabetic\",\n  \"v-alphabetic\": \"vAlphabetic\",\n  values: \"values\",\n  vectoreffect: \"vectorEffect\",\n  \"vector-effect\": \"vectorEffect\",\n  version: \"version\",\n  vertadvy: \"vertAdvY\",\n  \"vert-adv-y\": \"vertAdvY\",\n  vertoriginx: \"vertOriginX\",\n  \"vert-origin-x\": \"vertOriginX\",\n  vertoriginy: \"vertOriginY\",\n  \"vert-origin-y\": \"vertOriginY\",\n  vhanging: \"vHanging\",\n  \"v-hanging\": \"vHanging\",\n  videographic: \"vIdeographic\",\n  \"v-ideographic\": \"vIdeographic\",\n  viewbox: \"viewBox\",\n  viewtarget: \"viewTarget\",\n  visibility: \"visibility\",\n  vmathematical: \"vMathematical\",\n  \"v-mathematical\": \"vMathematical\",\n  vocab: \"vocab\",\n  widths: \"widths\",\n  wordspacing: \"wordSpacing\",\n  \"word-spacing\": \"wordSpacing\",\n  writingmode: \"writingMode\",\n  \"writing-mode\": \"writingMode\",\n  x1: \"x1\",\n  x2: \"x2\",\n  x: \"x\",\n  xchannelselector: \"xChannelSelector\",\n  xheight: \"xHeight\",\n  \"x-height\": \"xHeight\",\n  xlinkactuate: \"xlinkActuate\",\n  \"xlink:actuate\": \"xlinkActuate\",\n  xlinkarcrole: \"xlinkArcrole\",\n  \"xlink:arcrole\": \"xlinkArcrole\",\n  xlinkhref: \"xlinkHref\",\n  \"xlink:href\": \"xlinkHref\",\n  xlinkrole: \"xlinkRole\",\n  \"xlink:role\": \"xlinkRole\",\n  xlinkshow: \"xlinkShow\",\n  \"xlink:show\": \"xlinkShow\",\n  xlinktitle: \"xlinkTitle\",\n  \"xlink:title\": \"xlinkTitle\",\n  xlinktype: \"xlinkType\",\n  \"xlink:type\": \"xlinkType\",\n  xmlbase: \"xmlBase\",\n  \"xml:base\": \"xmlBase\",\n  xmllang: \"xmlLang\",\n  \"xml:lang\": \"xmlLang\",\n  xmlns: \"xmlns\",\n  \"xml:space\": \"xmlSpace\",\n  xmlnsxlink: \"xmlnsXlink\",\n  \"xmlns:xlink\": \"xmlnsXlink\",\n  xmlspace: \"xmlSpace\",\n  y1: \"y1\",\n  y2: \"y2\",\n  y: \"y\",\n  ychannelselector: \"yChannelSelector\",\n  z: \"z\",\n  zoomandpan: \"zoomAndPan\"\n};\nconst ELEMENT_ATTRIBUTE_MAPPING = {\n  input: {\n    checked: \"defaultChecked\",\n    value: \"defaultValue\",\n    maxlength: \"maxLength\"\n  },\n  form: {\n    enctype: \"encType\"\n  }\n};\nconst ELEMENT_TAG_NAME_MAPPING = {\n  a: \"a\",\n  altglyph: \"altGlyph\",\n  altglyphdef: \"altGlyphDef\",\n  altglyphitem: \"altGlyphItem\",\n  animate: \"animate\",\n  animatecolor: \"animateColor\",\n  animatemotion: \"animateMotion\",\n  animatetransform: \"animateTransform\",\n  audio: \"audio\",\n  canvas: \"canvas\",\n  circle: \"circle\",\n  clippath: \"clipPath\",\n  \"color-profile\": \"colorProfile\",\n  cursor: \"cursor\",\n  defs: \"defs\",\n  desc: \"desc\",\n  discard: \"discard\",\n  ellipse: \"ellipse\",\n  feblend: \"feBlend\",\n  fecolormatrix: \"feColorMatrix\",\n  fecomponenttransfer: \"feComponentTransfer\",\n  fecomposite: \"feComposite\",\n  feconvolvematrix: \"feConvolveMatrix\",\n  fediffuselighting: \"feDiffuseLighting\",\n  fedisplacementmap: \"feDisplacementMap\",\n  fedistantlight: \"feDistantLight\",\n  fedropshadow: \"feDropShadow\",\n  feflood: \"feFlood\",\n  fefunca: \"feFuncA\",\n  fefuncb: \"feFuncB\",\n  fefuncg: \"feFuncG\",\n  fefuncr: \"feFuncR\",\n  fegaussianblur: \"feGaussianBlur\",\n  feimage: \"feImage\",\n  femerge: \"feMerge\",\n  femergenode: \"feMergeNode\",\n  femorphology: \"feMorphology\",\n  feoffset: \"feOffset\",\n  fepointlight: \"fePointLight\",\n  fespecularlighting: \"feSpecularLighting\",\n  fespotlight: \"feSpotLight\",\n  fetile: \"feTile\",\n  feturbulence: \"feTurbulence\",\n  filter: \"filter\",\n  font: \"font\",\n  \"font-face\": \"fontFace\",\n  \"font-face-format\": \"fontFaceFormat\",\n  \"font-face-name\": \"fontFaceName\",\n  \"font-face-src\": \"fontFaceSrc\",\n  \"font-face-uri\": \"fontFaceUri\",\n  foreignobject: \"foreignObject\",\n  g: \"g\",\n  glyph: \"glyph\",\n  glyphref: \"glyphRef\",\n  hatch: \"hatch\",\n  hatchpath: \"hatchpath\",\n  hkern: \"hkern\",\n  iframe: \"iframe\",\n  image: \"image\",\n  line: \"line\",\n  lineargradient: \"linearGradient\",\n  marker: \"marker\",\n  mask: \"mask\",\n  mesh: \"mesh\",\n  meshgradient: \"meshgradient\",\n  meshpatch: \"meshpatch\",\n  meshrow: \"meshrow\",\n  metadata: \"metadata\",\n  \"missing-glyph\": \"missingGlyph\",\n  mpath: \"mpath\",\n  path: \"path\",\n  pattern: \"pattern\",\n  polygon: \"polygon\",\n  polyline: \"polyline\",\n  radialgradient: \"radialGradient\",\n  rect: \"rect\",\n  script: \"script\",\n  set: \"set\",\n  solidcolor: \"solidcolor\",\n  stop: \"stop\",\n  style: \"style\",\n  svg: \"svg\",\n  switch: \"switch\",\n  symbol: \"symbol\",\n  text: \"text\",\n  textpath: \"textPath\",\n  title: \"title\",\n  tref: \"tref\",\n  tspan: \"tspan\",\n  unknown: \"unknown\",\n  use: \"use\",\n  video: \"video\",\n  view: \"view\",\n  vkern: \"vkern\"\n};\nconst convertAriaAttribute = kebabKey => {\n  const [aria, ...parts] = kebabKey.split(\"-\");\n  return `${aria}-${parts.join(\"\").toLowerCase()}`;\n};\nconst getKey = (key, node) => {\n  const lowerCaseKey = key.toLowerCase();\n  const mappedElementAttribute =\n  // @ts-ignore\n  ELEMENT_ATTRIBUTE_MAPPING[node.name] &&\n  // @ts-ignore\n  ELEMENT_ATTRIBUTE_MAPPING[node.name][lowerCaseKey];\n  const mappedAttribute = ATTRIBUTE_MAPPING[lowerCaseKey];\n  if (mappedElementAttribute || mappedAttribute) {\n    return t__namespace.jsxIdentifier(mappedElementAttribute || mappedAttribute);\n  }\n  const kebabKey = kebabCase(key);\n  if (kebabKey.startsWith(\"aria-\")) {\n    return t__namespace.jsxIdentifier(convertAriaAttribute(kebabKey));\n  }\n  if (kebabKey.startsWith(\"data-\")) {\n    return t__namespace.jsxIdentifier(kebabKey);\n  }\n  return t__namespace.jsxIdentifier(key);\n};\nconst getValue = (key, value) => {\n  if (Array.isArray(value)) {\n    return t__namespace.stringLiteral(replaceSpaces(value.join(\" \")));\n  }\n  if (key === \"style\") {\n    return t__namespace.jsxExpressionContainer(stringToObjectStyle(value));\n  }\n  if (typeof value === \"number\" || isNumeric(value)) {\n    return t__namespace.jsxExpressionContainer(t__namespace.numericLiteral(Number(value)));\n  }\n  return t__namespace.stringLiteral(replaceSpaces(value));\n};\nconst getAttributes = node => {\n  if (!node.properties) return [];\n  const keys = Object.keys(node.properties);\n  const attributes = [];\n  let index = -1;\n  while (++index < keys.length) {\n    const key = keys[index];\n    const value = node.properties[key];\n    const attribute = t__namespace.jsxAttribute(getKey(key, node), getValue(key, value));\n    attributes.push(attribute);\n  }\n  return attributes;\n};\nconst root = (h, node) =>\n// @ts-ignore\nt__namespace.program(all(h, node));\nconst comment = (_, node, parent) => {\n  if (parent.type === \"root\" || !node.value) return null;\n  const expression = t__namespace.jsxEmptyExpression();\n  t__namespace.addComment(expression, \"inner\", node.value);\n  return t__namespace.jsxExpressionContainer(expression);\n};\nconst SPACE_REGEX = /^\\s+$/;\nconst text = (h, node, parent) => {\n  if (parent.type === \"root\") return null;\n  if (typeof node.value === \"string\" && SPACE_REGEX.test(node.value)) return null;\n  return t__namespace.jsxExpressionContainer(t__namespace.stringLiteral(entities.decodeXML(String(node.value))));\n};\nconst element = (h, node, parent) => {\n  if (!node.tagName) return null;\n  const children = all(h, node);\n  const selfClosing = children.length === 0;\n  const name = ELEMENT_TAG_NAME_MAPPING[node.tagName] || node.tagName;\n  const openingElement = t__namespace.jsxOpeningElement(t__namespace.jsxIdentifier(name), getAttributes(node), selfClosing);\n  const closingElement = !selfClosing ? t__namespace.jsxClosingElement(t__namespace.jsxIdentifier(name)) : null;\n  const jsxElement = t__namespace.jsxElement(openingElement, closingElement, children);\n  if (parent.type === \"root\") {\n    return t__namespace.expressionStatement(jsxElement);\n  }\n  return jsxElement;\n};\nvar handlers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  comment: comment,\n  element: element,\n  root: root,\n  text: text\n});\nconst helpers = {\n  handlers\n};\nconst toBabelAST = tree => root(helpers, tree);\nmodule.exports = toBabelAST;","map":{"version":3,"names":["one","h","node","parent","type","fn","handlers","Error","all","helpers","nodes","children","length","values","index","result","push","filter","Boolean","isNumeric","value","Number","isNaN","parseFloat","hyphenToCamelCase","string","replace","_","chr","toUpperCase","trimEnd","haystack","needle","endsWith","slice","KEBAB_REGEX","kebabCase","str","match","toLowerCase","SPACES_REGEXP","replaceSpaces","PX_REGEX","MS_REGEX","VAR_REGEX","isConvertiblePixelValue","test","formatKey","key","t__namespace","stringLiteral","substr","identifier","formatValue","numericLiteral","stringToObjectStyle","rawStyle","entries","split","properties","entry","style","trim","firstColon","indexOf","property","objectProperty","objectExpression","ATTRIBUTE_MAPPING","accept","acceptcharset","accesskey","action","allowfullscreen","alt","as","async","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","capture","cellpadding","cellspacing","challenge","charset","checked","cite","class","classid","classname","cols","colspan","content","contenteditable","contextmenu","controls","controlslist","coords","crossorigin","dangerouslysetinnerhtml","data","datetime","default","defaultchecked","defaultvalue","defer","dir","disabled","download","draggable","enctype","for","form","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","headers","height","hidden","high","href","hreflang","htmlfor","httpequiv","icon","id","innerhtml","inputmode","integrity","is","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","kind","label","lang","list","loop","low","manifest","marginwidth","marginheight","max","maxlength","media","mediagroup","method","min","minlength","multiple","muted","name","nomodule","nonce","novalidate","open","optimum","pattern","placeholder","playsinline","poster","preload","profile","radiogroup","readonly","referrerpolicy","rel","required","reversed","role","rows","rowspan","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","spellcheck","src","srcdoc","srclang","srcset","start","step","summary","tabindex","target","title","usemap","width","wmode","wrap","about","accentheight","accumulate","additive","alignmentbaseline","allowreorder","alphabetic","amplitude","arabicform","ascent","attributename","attributetype","autoreverse","azimuth","basefrequency","baselineshift","baseprofile","bbox","begin","bias","by","calcmode","capheight","clip","clippath","clippathunits","cliprule","color","colorinterpolation","colorinterpolationfilters","colorprofile","colorrendering","contentscripttype","contentstyletype","cursor","cx","cy","d","datatype","decelerate","descent","diffuseconstant","direction","display","divisor","dominantbaseline","dur","dx","dy","edgemode","elevation","enablebackground","end","exponent","externalresourcesrequired","fill","fillopacity","fillrule","filterres","filterunits","floodopacity","floodcolor","focusable","fontfamily","fontsize","fontsizeadjust","fontstretch","fontstyle","fontvariant","fontweight","format","from","fx","fy","g1","g2","glyphname","glyphorientationhorizontal","glyphorientationvertical","glyphref","gradienttransform","gradientunits","hanging","horizadvx","horizoriginx","ideographic","imagerendering","in2","in","inlist","intercept","k1","k2","k3","k4","k","kernelmatrix","kernelunitlength","kerning","keypoints","keysplines","keytimes","lengthadjust","letterspacing","lightingcolor","limitingconeangle","local","markerend","markerheight","markermid","markerstart","markerunits","markerwidth","mask","maskcontentunits","maskunits","mathematical","mode","numoctaves","offset","opacity","operator","order","orient","orientation","origin","overflow","overlineposition","overlinethickness","paintorder","panose1","pathlength","patterncontentunits","patterntransform","patternunits","pointerevents","points","pointsatx","pointsaty","pointsatz","prefix","preservealpha","preserveaspectratio","primitiveunits","r","radius","refx","refy","renderingintent","repeatcount","repeatdur","requiredextensions","requiredfeatures","resource","restart","results","rotate","rx","ry","scale","security","seed","shaperendering","slope","spacing","specularconstant","specularexponent","speed","spreadmethod","startoffset","stddeviation","stemh","stemv","stitchtiles","stopcolor","stopopacity","strikethroughposition","strikethroughthickness","stroke","strokedasharray","strokedashoffset","strokelinecap","strokelinejoin","strokemiterlimit","strokewidth","strokeopacity","suppresscontenteditablewarning","suppresshydrationwarning","surfacescale","systemlanguage","tablevalues","targetx","targety","textanchor","textdecoration","textlength","textrendering","to","transform","typeof","u1","u2","underlineposition","underlinethickness","unicode","unicodebidi","unicoderange","unitsperem","unselectable","valphabetic","vectoreffect","version","vertadvy","vertoriginx","vertoriginy","vhanging","videographic","viewbox","viewtarget","visibility","vmathematical","vocab","widths","wordspacing","writingmode","x1","x2","x","xchannelselector","xheight","xlinkactuate","xlinkarcrole","xlinkhref","xlinkrole","xlinkshow","xlinktitle","xlinktype","xmlbase","xmllang","xmlns","xmlnsxlink","xmlspace","y1","y2","y","ychannelselector","z","zoomandpan","ELEMENT_ATTRIBUTE_MAPPING","input","ELEMENT_TAG_NAME_MAPPING","a","altglyph","altglyphdef","altglyphitem","animate","animatecolor","animatemotion","animatetransform","audio","canvas","circle","defs","desc","discard","ellipse","feblend","fecolormatrix","fecomponenttransfer","fecomposite","feconvolvematrix","fediffuselighting","fedisplacementmap","fedistantlight","fedropshadow","feflood","fefunca","fefuncb","fefuncg","fefuncr","fegaussianblur","feimage","femerge","femergenode","femorphology","feoffset","fepointlight","fespecularlighting","fespotlight","fetile","feturbulence","font","foreignobject","g","glyph","hatch","hatchpath","hkern","iframe","image","line","lineargradient","marker","mesh","meshgradient","meshpatch","meshrow","metadata","mpath","path","polygon","polyline","radialgradient","rect","script","set","solidcolor","stop","svg","switch","symbol","text","textpath","tref","tspan","unknown","use","video","view","vkern","convertAriaAttribute","kebabKey","aria","parts","join","getKey","lowerCaseKey","mappedElementAttribute","mappedAttribute","jsxIdentifier","startsWith","getValue","Array","isArray","jsxExpressionContainer","getAttributes","keys","Object","attributes","attribute","jsxAttribute","root","program","comment","expression","jsxEmptyExpression","addComment","SPACE_REGEX","entities","decodeXML","String","element","tagName","selfClosing","openingElement","jsxOpeningElement","closingElement","jsxClosingElement","jsxElement","expressionStatement","toBabelAST","tree"],"sources":["C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\one.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\all.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\util.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\stringToObjectStyle.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\mappings.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\getAttributes.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\handlers.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\helpers.ts","C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@svgr\\hast-util-to-babel-ast\\src\\index.ts"],"sourcesContent":["import type { Node, RootNode, ElementNode } from 'svg-parser'\nimport type { Helpers } from './helpers'\nimport type * as t from '@babel/types'\n\nexport const one = (\n  h: Helpers,\n  node: Node,\n  parent?: RootNode | ElementNode,\n): t.JSXElement | t.ExpressionStatement | t.JSXExpressionContainer | null => {\n  const type = node && node.type\n  const fn = h.handlers[type]\n\n  /* Fail on non-nodes. */\n  if (!type) {\n    throw new Error(`Expected node, got \\`${node}\\``)\n  }\n\n  if (!fn) {\n    throw new Error(`Node of type ${type} is unknown`)\n  }\n\n  // @ts-ignore\n  return fn(h, node, parent)\n}\n","import { one } from './one'\nimport type * as t from '@babel/types'\nimport type { RootNode, ElementNode } from 'svg-parser'\nimport type { Helpers } from './helpers'\n\n/* Transform the children of `parent`. */\nexport const all = (\n  helpers: Helpers,\n  parent: RootNode | ElementNode,\n): (t.JSXElement | t.JSXExpressionContainer)[] => {\n  const nodes = parent.children || []\n  const { length } = nodes\n  const values = []\n  let index = -1\n\n  while (++index < length) {\n    const node = nodes[index]\n    if (typeof node !== 'string') {\n      const result = one(helpers, node, parent)\n      values.push(result)\n    }\n  }\n\n  return values.filter(Boolean) as (t.JSXElement | t.JSXExpressionContainer)[]\n}\n","/**\n * Determines if the specified string consists entirely of numeric characters.\n */\nexport const isNumeric = (value: number | string): boolean => {\n  // @ts-ignore\n  return !Number.isNaN(value - parseFloat(value))\n}\n\n/**\n * Convert a hyphenated string to camelCase.\n */\nexport const hyphenToCamelCase = (string: string): string => {\n  return string.replace(/-(.)/g, (_, chr) => chr.toUpperCase())\n}\n\n/**\n * Trim the specified substring off the string. If the string does not end\n * with the specified substring, this is a no-op.\n *\n * @param {string} haystack String to search in\n * @param {string} needle   String to search for\n */\nexport const trimEnd = (haystack: string, needle: string): string => {\n  return haystack.endsWith(needle)\n    ? haystack.slice(0, -needle.length)\n    : haystack\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\nexport const kebabCase = (str: string): string => {\n  return str.replace(KEBAB_REGEX, (match) => `-${match.toLowerCase()}`)\n}\n\nconst SPACES_REGEXP = /[\\t\\r\\n\\u0085\\u2028\\u2029]+/g\n\nexport const replaceSpaces = (str: string): string => {\n  return str.replace(SPACES_REGEXP, ' ')\n}\n","// Inspired by https://github.com/reactjs/react-magic/blob/master/src/htmltojsx.js\nimport * as t from '@babel/types'\nimport { hyphenToCamelCase, isNumeric, trimEnd } from './util'\n\nconst PX_REGEX = /^\\d+px$/\nconst MS_REGEX = /^-ms-/\nconst VAR_REGEX = /^--/\n\n/**\n * Determines if the CSS value can be converted from a\n * 'px' suffixed string to a numeric value.\n */\nconst isConvertiblePixelValue = (value: string) => {\n  return PX_REGEX.test(value)\n}\n\n/**\n * Format style key into JSX style object key.\n */\nconst formatKey = (key: string) => {\n  if (VAR_REGEX.test(key)) {\n    return t.stringLiteral(key)\n  }\n  key = key.toLowerCase()\n  // Don't capitalize -ms- prefix\n  if (MS_REGEX.test(key)) key = key.substr(1)\n  return t.identifier(hyphenToCamelCase(key))\n}\n\n/**\n * Format style value into JSX style object value.\n */\nconst formatValue = (value: string) => {\n  if (isNumeric(value)) return t.numericLiteral(Number(value))\n  if (isConvertiblePixelValue(value))\n    return t.numericLiteral(Number(trimEnd(value, 'px')))\n  return t.stringLiteral(value)\n}\n\n/**\n * Handle parsing of inline styles.\n */\nexport const stringToObjectStyle = (rawStyle: string): t.ObjectExpression => {\n  const entries = rawStyle.split(';')\n  const properties = []\n\n  let index = -1\n\n  while (++index < entries.length) {\n    const entry = entries[index]\n    const style = entry.trim()\n    const firstColon = style.indexOf(':')\n    const value = style.substr(firstColon + 1).trim()\n    const key = style.substr(0, firstColon)\n    if (key !== '') {\n      const property = t.objectProperty(formatKey(key), formatValue(value))\n      properties.push(property)\n    }\n  }\n\n  return t.objectExpression(properties)\n}\n","// From https://raw.githubusercontent.com/facebook/react/master/packages/react-dom/src/shared/possibleStandardNames.js\nexport const ATTRIBUTE_MAPPING = {\n  // HTML\n  accept: 'accept',\n  acceptcharset: 'acceptCharset',\n  'accept-charset': 'acceptCharset',\n  accesskey: 'accessKey',\n  action: 'action',\n  allowfullscreen: 'allowFullScreen',\n  alt: 'alt',\n  as: 'as',\n  async: 'async',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  capture: 'capture',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  challenge: 'challenge',\n  charset: 'charSet',\n  checked: 'checked',\n  children: 'children',\n  cite: 'cite',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  cols: 'cols',\n  colspan: 'colSpan',\n  content: 'content',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controls: 'controls',\n  controlslist: 'controlsList',\n  coords: 'coords',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  data: 'data',\n  datetime: 'dateTime',\n  default: 'default',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  defer: 'defer',\n  dir: 'dir',\n  disabled: 'disabled',\n  download: 'download',\n  draggable: 'draggable',\n  enctype: 'encType',\n  for: 'htmlFor',\n  form: 'form',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  headers: 'headers',\n  height: 'height',\n  hidden: 'hidden',\n  high: 'high',\n  href: 'href',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  id: 'id',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  integrity: 'integrity',\n  is: 'is',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  kind: 'kind',\n  label: 'label',\n  lang: 'lang',\n  list: 'list',\n  loop: 'loop',\n  low: 'low',\n  manifest: 'manifest',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  max: 'max',\n  maxlength: 'maxLength',\n  media: 'media',\n  mediagroup: 'mediaGroup',\n  method: 'method',\n  min: 'min',\n  minlength: 'minLength',\n  multiple: 'multiple',\n  muted: 'muted',\n  name: 'name',\n  nomodule: 'noModule',\n  nonce: 'nonce',\n  novalidate: 'noValidate',\n  open: 'open',\n  optimum: 'optimum',\n  pattern: 'pattern',\n  placeholder: 'placeholder',\n  playsinline: 'playsInline',\n  poster: 'poster',\n  preload: 'preload',\n  profile: 'profile',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rel: 'rel',\n  required: 'required',\n  reversed: 'reversed',\n  role: 'role',\n  rows: 'rows',\n  rowspan: 'rowSpan',\n  sandbox: 'sandbox',\n  scope: 'scope',\n  scoped: 'scoped',\n  scrolling: 'scrolling',\n  seamless: 'seamless',\n  selected: 'selected',\n  shape: 'shape',\n  size: 'size',\n  sizes: 'sizes',\n  span: 'span',\n  spellcheck: 'spellCheck',\n  src: 'src',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  start: 'start',\n  step: 'step',\n  style: 'style',\n  summary: 'summary',\n  tabindex: 'tabIndex',\n  target: 'target',\n  title: 'title',\n  type: 'type',\n  usemap: 'useMap',\n  value: 'value',\n  width: 'width',\n  wmode: 'wmode',\n  wrap: 'wrap',\n\n  // SVG\n  about: 'about',\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  accumulate: 'accumulate',\n  additive: 'additive',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  alphabetic: 'alphabetic',\n  amplitude: 'amplitude',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  ascent: 'ascent',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  azimuth: 'azimuth',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  bbox: 'bbox',\n  begin: 'begin',\n  bias: 'bias',\n  by: 'by',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clip: 'clip',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  color: 'color',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  cursor: 'cursor',\n  cx: 'cx',\n  cy: 'cy',\n  d: 'd',\n  datatype: 'datatype',\n  decelerate: 'decelerate',\n  descent: 'descent',\n  diffuseconstant: 'diffuseConstant',\n  direction: 'direction',\n  display: 'display',\n  divisor: 'divisor',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  dur: 'dur',\n  dx: 'dx',\n  dy: 'dy',\n  edgemode: 'edgeMode',\n  elevation: 'elevation',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  end: 'end',\n  exponent: 'exponent',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fill: 'fill',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filter: 'filter',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  focusable: 'focusable',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  format: 'format',\n  from: 'from',\n  fx: 'fx',\n  fy: 'fy',\n  g1: 'g1',\n  g2: 'g2',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  hanging: 'hanging',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  ideographic: 'ideographic',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  in2: 'in2',\n  in: 'in',\n  inlist: 'inlist',\n  intercept: 'intercept',\n  k1: 'k1',\n  k2: 'k2',\n  k3: 'k3',\n  k4: 'k4',\n  k: 'k',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  kerning: 'kerning',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  local: 'local',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  mask: 'mask',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  mathematical: 'mathematical',\n  mode: 'mode',\n  numoctaves: 'numOctaves',\n  offset: 'offset',\n  opacity: 'opacity',\n  operator: 'operator',\n  order: 'order',\n  orient: 'orient',\n  orientation: 'orientation',\n  origin: 'origin',\n  overflow: 'overflow',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  panose1: 'panose1',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  points: 'points',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  prefix: 'prefix',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  property: 'property',\n  r: 'r',\n  radius: 'radius',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  resource: 'resource',\n  restart: 'restart',\n  result: 'result',\n  results: 'results',\n  rotate: 'rotate',\n  rx: 'rx',\n  ry: 'ry',\n  scale: 'scale',\n  security: 'security',\n  seed: 'seed',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  slope: 'slope',\n  spacing: 'spacing',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  speed: 'speed',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stemh: 'stemh',\n  stemv: 'stemv',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  string: 'string',\n  stroke: 'stroke',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  to: 'to',\n  transform: 'transform',\n  typeof: 'typeof',\n  u1: 'u1',\n  u2: 'u2',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicode: 'unicode',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  values: 'values',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  version: 'version',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  visibility: 'visibility',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  vocab: 'vocab',\n  widths: 'widths',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  x1: 'x1',\n  x2: 'x2',\n  x: 'x',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  xmlns: 'xmlns',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  y1: 'y1',\n  y2: 'y2',\n  y: 'y',\n  ychannelselector: 'yChannelSelector',\n  z: 'z',\n  zoomandpan: 'zoomAndPan',\n}\n\nexport const ELEMENT_ATTRIBUTE_MAPPING = {\n  input: {\n    checked: 'defaultChecked',\n    value: 'defaultValue',\n    maxlength: 'maxLength',\n  },\n  form: {\n    enctype: 'encType',\n  },\n}\n\n// Reference: https://developer.mozilla.org/en-US/docs/Web/SVG/Element#SVG_elements\nexport const ELEMENT_TAG_NAME_MAPPING: Record<string, string> = {\n  a: 'a',\n  altglyph: 'altGlyph',\n  altglyphdef: 'altGlyphDef',\n  altglyphitem: 'altGlyphItem',\n  animate: 'animate',\n  animatecolor: 'animateColor',\n  animatemotion: 'animateMotion',\n  animatetransform: 'animateTransform',\n  audio: 'audio',\n  canvas: 'canvas',\n  circle: 'circle',\n  clippath: 'clipPath',\n  'color-profile': 'colorProfile',\n  cursor: 'cursor',\n  defs: 'defs',\n  desc: 'desc',\n  discard: 'discard',\n  ellipse: 'ellipse',\n  feblend: 'feBlend',\n  fecolormatrix: 'feColorMatrix',\n  fecomponenttransfer: 'feComponentTransfer',\n  fecomposite: 'feComposite',\n  feconvolvematrix: 'feConvolveMatrix',\n  fediffuselighting: 'feDiffuseLighting',\n  fedisplacementmap: 'feDisplacementMap',\n  fedistantlight: 'feDistantLight',\n  fedropshadow: 'feDropShadow',\n  feflood: 'feFlood',\n  fefunca: 'feFuncA',\n  fefuncb: 'feFuncB',\n  fefuncg: 'feFuncG',\n  fefuncr: 'feFuncR',\n  fegaussianblur: 'feGaussianBlur',\n  feimage: 'feImage',\n  femerge: 'feMerge',\n  femergenode: 'feMergeNode',\n  femorphology: 'feMorphology',\n  feoffset: 'feOffset',\n  fepointlight: 'fePointLight',\n  fespecularlighting: 'feSpecularLighting',\n  fespotlight: 'feSpotLight',\n  fetile: 'feTile',\n  feturbulence: 'feTurbulence',\n  filter: 'filter',\n  font: 'font',\n  'font-face': 'fontFace',\n  'font-face-format': 'fontFaceFormat',\n  'font-face-name': 'fontFaceName',\n  'font-face-src': 'fontFaceSrc',\n  'font-face-uri': 'fontFaceUri',\n  foreignobject: 'foreignObject',\n  g: 'g',\n  glyph: 'glyph',\n  glyphref: 'glyphRef',\n  hatch: 'hatch',\n  hatchpath: 'hatchpath',\n  hkern: 'hkern',\n  iframe: 'iframe',\n  image: 'image',\n  line: 'line',\n  lineargradient: 'linearGradient',\n  marker: 'marker',\n  mask: 'mask',\n  mesh: 'mesh',\n  meshgradient: 'meshgradient',\n  meshpatch: 'meshpatch',\n  meshrow: 'meshrow',\n  metadata: 'metadata',\n  'missing-glyph': 'missingGlyph',\n  mpath: 'mpath',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialgradient: 'radialGradient',\n  rect: 'rect',\n  script: 'script',\n  set: 'set',\n  solidcolor: 'solidcolor',\n  stop: 'stop',\n  style: 'style',\n  svg: 'svg',\n  switch: 'switch',\n  symbol: 'symbol',\n  text: 'text',\n  textpath: 'textPath',\n  title: 'title',\n  tref: 'tref',\n  tspan: 'tspan',\n  unknown: 'unknown',\n  use: 'use',\n  video: 'video',\n  view: 'view',\n  vkern: 'vkern',\n}\n","import * as t from '@babel/types'\nimport type { ElementNode } from 'svg-parser'\nimport { isNumeric, kebabCase, replaceSpaces } from './util'\nimport { stringToObjectStyle } from './stringToObjectStyle'\nimport { ATTRIBUTE_MAPPING, ELEMENT_ATTRIBUTE_MAPPING } from './mappings'\n\nconst convertAriaAttribute = (kebabKey: string) => {\n  const [aria, ...parts] = kebabKey.split('-')\n  return `${aria}-${parts.join('').toLowerCase()}`\n}\n\nconst getKey = (key: string, node: ElementNode) => {\n  const lowerCaseKey = key.toLowerCase()\n  const mappedElementAttribute =\n    // @ts-ignore\n    ELEMENT_ATTRIBUTE_MAPPING[node.name] &&\n    // @ts-ignore\n    ELEMENT_ATTRIBUTE_MAPPING[node.name][lowerCaseKey]\n  // @ts-ignore\n  const mappedAttribute = ATTRIBUTE_MAPPING[lowerCaseKey]\n\n  if (mappedElementAttribute || mappedAttribute) {\n    return t.jsxIdentifier(mappedElementAttribute || mappedAttribute)\n  }\n\n  const kebabKey = kebabCase(key)\n\n  if (kebabKey.startsWith('aria-')) {\n    return t.jsxIdentifier(convertAriaAttribute(kebabKey))\n  }\n\n  if (kebabKey.startsWith('data-')) {\n    return t.jsxIdentifier(kebabKey)\n  }\n\n  return t.jsxIdentifier(key)\n}\n\nconst getValue = (key: string, value: string[] | string | number) => {\n  // Handle className\n  if (Array.isArray(value)) {\n    return t.stringLiteral(replaceSpaces(value.join(' ')))\n  }\n\n  if (key === 'style') {\n    return t.jsxExpressionContainer(stringToObjectStyle(value as string))\n  }\n\n  if (typeof value === 'number' || isNumeric(value)) {\n    return t.jsxExpressionContainer(t.numericLiteral(Number(value)))\n  }\n\n  return t.stringLiteral(replaceSpaces(value))\n}\n\nexport const getAttributes = (node: ElementNode): t.JSXAttribute[] => {\n  if (!node.properties) return []\n  const keys = Object.keys(node.properties)\n  const attributes = []\n  let index = -1\n\n  while (++index < keys.length) {\n    const key = keys[index]\n    const value = node.properties[key]\n    const attribute = t.jsxAttribute(getKey(key, node), getValue(key, value))\n    attributes.push(attribute)\n  }\n\n  return attributes\n}\n","import * as t from '@babel/types'\nimport { decodeXML } from 'entities'\nimport { all } from './all'\nimport { getAttributes } from './getAttributes'\nimport { ELEMENT_TAG_NAME_MAPPING } from './mappings'\nimport type { RootNode, ElementNode, TextNode } from 'svg-parser'\nimport type { Helpers } from './helpers'\n\nexport const root = (h: Helpers, node: RootNode): t.Program =>\n  // @ts-ignore\n  t.program(all(h, node))\n\nexport const comment = (\n  _: Helpers,\n  node: ElementNode,\n  parent: RootNode | ElementNode,\n): t.JSXExpressionContainer | null => {\n  if (parent.type === 'root' || !node.value) return null\n\n  const expression = t.jsxEmptyExpression()\n  t.addComment(expression, 'inner', node.value)\n  return t.jsxExpressionContainer(expression)\n}\n\nconst SPACE_REGEX = /^\\s+$/\n\nexport const text = (\n  h: Helpers,\n  node: TextNode,\n  parent: RootNode | ElementNode,\n): t.JSXExpressionContainer | null => {\n  if (parent.type === 'root') return null\n  if (typeof node.value === 'string' && SPACE_REGEX.test(node.value))\n    return null\n\n  return t.jsxExpressionContainer(\n    t.stringLiteral(decodeXML(String(node.value))),\n  )\n}\n\nexport const element = (\n  h: Helpers,\n  node: ElementNode,\n  parent: RootNode | ElementNode,\n): t.JSXElement | t.ExpressionStatement | null => {\n  if (!node.tagName) return null\n\n  const children = all(h, node)\n  const selfClosing = children.length === 0\n\n  const name = ELEMENT_TAG_NAME_MAPPING[node.tagName] || node.tagName\n\n  const openingElement = t.jsxOpeningElement(\n    t.jsxIdentifier(name),\n    getAttributes(node),\n    selfClosing,\n  )\n\n  const closingElement = !selfClosing\n    ? t.jsxClosingElement(t.jsxIdentifier(name))\n    : null\n\n  const jsxElement = t.jsxElement(openingElement, closingElement, children)\n\n  if (parent.type === 'root') {\n    return t.expressionStatement(jsxElement)\n  }\n\n  return jsxElement\n}\n","import * as handlers from './handlers'\n\nexport const helpers = { handlers }\n\nexport type Helpers = typeof helpers\n","import type { RootNode } from 'svg-parser'\nimport type * as t from '@babel/types'\nimport { root } from './handlers'\nimport { helpers } from './helpers'\n\nconst toBabelAST = (tree: RootNode): t.Program => root(helpers, tree)\n\nexport default toBabelAST\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}