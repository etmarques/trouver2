{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = definePolyfillProvider;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _helperCompilationTargets = _interopRequireWildcard(require(\"@babel/helper-compilation-targets\"));\nvar _utils = require(\"./utils\");\nvar _importsCache = _interopRequireDefault(require(\"./imports-cache\"));\nvar _debugUtils = require(\"./debug-utils\");\nvar _normalizeOptions = require(\"./normalize-options\");\nvar v = _interopRequireWildcard(require(\"./visitors\"));\nvar deps = _interopRequireWildcard(require(\"./node/dependencies\"));\nvar _metaResolver = _interopRequireDefault(require(\"./meta-resolver\"));\nconst _excluded = [\"method\", \"targets\", \"ignoreBrowserslistConfig\", \"configPath\", \"debug\", \"shouldInjectPolyfill\", \"absoluteImports\"];\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nconst getTargets = _helperCompilationTargets.default.default || _helperCompilationTargets.default;\nfunction resolveOptions(options, babelApi) {\n  const {\n      method,\n      targets: targetsOption,\n      ignoreBrowserslistConfig,\n      configPath,\n      debug,\n      shouldInjectPolyfill,\n      absoluteImports\n    } = options,\n    providerOptions = _objectWithoutPropertiesLoose(options, _excluded);\n  if (isEmpty(options)) {\n    throw new Error(`\\\nThis plugin requires options, for example:\n    {\n      \"plugins\": [\n        [\"<plugin name>\", { method: \"usage-pure\" }]\n      ]\n    }\n\nSee more options at https://github.com/babel/babel-polyfills/blob/main/docs/usage.md`);\n  }\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";else if (method === \"entry-global\") methodName = \"entryGlobal\";else if (method === \"usage-pure\") methodName = \"usagePure\";else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(`.method must be one of \"entry-global\", \"usage-global\"` + ` or \"usage-pure\" (received ${JSON.stringify(method)})`);\n  }\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(`.include and .exclude are not supported when using the` + ` .shouldInjectPolyfill function.`);\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(`.shouldInjectPolyfill must be a function, or undefined` + ` (received ${JSON.stringify(shouldInjectPolyfill)})`);\n  }\n  if (absoluteImports != null && typeof absoluteImports !== \"boolean\" && typeof absoluteImports !== \"string\") {\n    throw new Error(`.absoluteImports must be a boolean, a string, or undefined` + ` (received ${JSON.stringify(absoluteImports)})`);\n  }\n  let targets;\n  if (\n  // If any browserslist-related option is specified, fallback to the old\n  // behavior of not using the targets specified in the top-level options.\n  targetsOption || configPath || ignoreBrowserslistConfig) {\n    const targetsObj = typeof targetsOption === \"string\" || Array.isArray(targetsOption) ? {\n      browsers: targetsOption\n    } : targetsOption;\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports != null ? absoluteImports : false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions\n  };\n}\nfunction instantiateProvider(factory, options, missingDependencies, dirname, debugLog, babelApi) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports\n  } = resolveOptions(options, babelApi);\n  const getUtils = (0, _utils.createUtilsGetter)(new _importsCache.default(moduleName => deps.resolve(dirname, moduleName, absoluteImports))); // eslint-disable-next-line prefer-const\n\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n  const depsCache = new Map();\n  const api = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver: _metaResolver.default,\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(`Internal error in the ${factory.name} provider: ` + `shouldInjectPolyfill() can't be called during initialization.`);\n      }\n      if (!polyfillsNames.has(name)) {\n        console.warn(`Internal error in the ${providerName} provider: ` + `unknown polyfill \"${name}\".`);\n      }\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n      let shouldInject = (0, _helperCompilationTargets.isRequired)(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude\n      });\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n      return shouldInject;\n    },\n    debug(name) {\n      var _debugLog, _debugLog$polyfillsSu;\n      debugLog().found = true;\n      if (!debug || !name) return;\n      if (debugLog().polyfills.has(providerName)) return;\n      debugLog().polyfills.add(name);\n      (_debugLog$polyfillsSu = (_debugLog = debugLog()).polyfillsSupport) != null ? _debugLog$polyfillsSu : _debugLog.polyfillsSupport = polyfillsSupport;\n    },\n    assertDependency(name) {\n      let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"*\";\n      if (missingDependencies === false) return;\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n      const found = missingDependencies.all ? false : mapGetOr(depsCache, `${name} :: ${dirname}`, () => deps.has(dirname, name));\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    }\n  };\n  const provider = factory(api, providerOptions, dirname);\n  const providerName = provider.name || factory.name;\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(`The \"${providerName}\" provider doesn't support the \"${method}\" polyfilling method.`);\n  }\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n  ({\n    include,\n    exclude\n  } = (0, _normalizeOptions.validateIncludeExclude)(providerName, polyfillsNames, providerOptions.include || [], providerOptions.exclude || []));\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n    providerName,\n    callProvider(payload, path) {\n      const utils = getUtils(path);\n      provider[methodName](payload, utils, path);\n    }\n  };\n}\nfunction definePolyfillProvider(factory) {\n  return (0, _helperPluginUtils.declare)((babelApi, options, dirname) => {\n    babelApi.assertVersion(7);\n    const {\n      traverse\n    } = babelApi;\n    let debugLog;\n    const missingDependencies = (0, _normalizeOptions.applyMissingDependenciesDefaults)(options, babelApi);\n    const {\n      debug,\n      method,\n      targets,\n      provider,\n      providerName,\n      callProvider\n    } = instantiateProvider(factory, options, missingDependencies, dirname, () => debugLog, babelApi);\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n    const visitor = provider.visitor ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor]) : createVisitor(callProvider);\n    if (debug && debug !== _debugUtils.presetEnvSilentDebugHeader) {\n      console.log(`${providerName}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${(0, _debugUtils.stringifyTargetsMultiline)(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n    const {\n      runtimeName\n    } = provider;\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n      pre(file) {\n        var _provider$pre;\n        if (runtimeName) {\n          if (file.get(\"runtimeHelpersModuleName\") && file.get(\"runtimeHelpersModuleName\") !== runtimeName) {\n            console.warn(`Two different polyfill providers` + ` (${file.get(\"runtimeHelpersModuleProvider\")}` + ` and ${providerName}) are trying to define two` + ` conflicting @babel/runtime alternatives:` + ` ${file.get(\"runtimeHelpersModuleName\")} and ${runtimeName}.` + ` The second one will be ignored.`);\n          } else {\n            file.set(\"runtimeHelpersModuleName\", runtimeName);\n            file.set(\"runtimeHelpersModuleProvider\", providerName);\n          }\n        }\n        debugLog = {\n          polyfills: new Set(),\n          polyfillsSupport: undefined,\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set()\n        };\n        (_provider$pre = provider.pre) == null ? void 0 : _provider$pre.apply(this, arguments);\n      },\n      post() {\n        var _provider$post;\n        (_provider$post = provider.post) == null ? void 0 : _provider$post.apply(this, arguments);\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n        if (!debug) return;\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n        if (debugLog.polyfills.size === 0) {\n          console.log(method === \"entry-global\" ? debugLog.found ? `Based on your targets, the ${providerName} polyfill did not add any polyfill.` : `The entry point for the ${providerName} polyfill has not been found.` : `Based on your code and targets, the ${providerName} polyfill did not add any polyfill.`);\n          return;\n        }\n        if (method === \"entry-global\") {\n          console.log(`The ${providerName} polyfill entry has been replaced with ` + `the following polyfills:`);\n        } else {\n          console.log(`The ${providerName} polyfill added the following polyfills:`);\n        }\n        for (const name of debugLog.polyfills) {\n          var _debugLog$polyfillsSu2;\n          if ((_debugLog$polyfillsSu2 = debugLog.polyfillsSupport) != null && _debugLog$polyfillsSu2[name]) {\n            const filteredTargets = (0, _helperCompilationTargets.getInclusionReasons)(name, targets, debugLog.polyfillsSupport);\n            const formattedTargets = JSON.stringify(filteredTargets).replace(/,/g, \", \").replace(/^\\{\"/, '{ \"').replace(/\"\\}$/, '\" }');\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      }\n    };\n  });\n}\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n  return val;\n}\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}","map":{"version":3,"names":["exports","__esModule","default","definePolyfillProvider","_helperPluginUtils","require","_helperCompilationTargets","_interopRequireWildcard","_utils","_importsCache","_interopRequireDefault","_debugUtils","_normalizeOptions","v","deps","_metaResolver","_excluded","obj","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","i","length","indexOf","getTargets","resolveOptions","options","babelApi","method","targets","targetsOption","ignoreBrowserslistConfig","configPath","debug","shouldInjectPolyfill","absoluteImports","providerOptions","isEmpty","Error","methodName","JSON","stringify","include","exclude","targetsObj","Array","isArray","browsers","instantiateProvider","factory","missingDependencies","dirname","debugLog","getUtils","createUtilsGetter","moduleName","resolve","polyfillsSupport","polyfillsNames","filterPolyfills","depsCache","Map","api","babel","createMetaResolver","name","undefined","console","warn","providerName","shouldInject","isRequired","compatData","includes","excludes","_debugLog","_debugLog$polyfillsSu","found","polyfills","add","assertDependency","version","arguments","dep","all","mapGetOr","missingDeps","provider","Set","validateIncludeExclude","callProvider","payload","path","utils","declare","assertVersion","traverse","applyMissingDependenciesDefaults","createVisitor","entry","usage","visitor","visitors","merge","presetEnvSilentDebugHeader","log","stringifyTargetsMultiline","runtimeName","pre","file","_provider$pre","providers","apply","post","_provider$post","logMissing","laterLogMissing","filename","size","_debugLog$polyfillsSu2","filteredTargets","getInclusionReasons","formattedTargets","replace","map","getDefault","val"],"sources":["C:/Users/AGU/Documents/trouver2/node_modules/@babel/helper-define-polyfill-provider/lib/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = definePolyfillProvider;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperCompilationTargets = _interopRequireWildcard(require(\"@babel/helper-compilation-targets\"));\n\nvar _utils = require(\"./utils\");\n\nvar _importsCache = _interopRequireDefault(require(\"./imports-cache\"));\n\nvar _debugUtils = require(\"./debug-utils\");\n\nvar _normalizeOptions = require(\"./normalize-options\");\n\nvar v = _interopRequireWildcard(require(\"./visitors\"));\n\nvar deps = _interopRequireWildcard(require(\"./node/dependencies\"));\n\nvar _metaResolver = _interopRequireDefault(require(\"./meta-resolver\"));\n\nconst _excluded = [\"method\", \"targets\", \"ignoreBrowserslistConfig\", \"configPath\", \"debug\", \"shouldInjectPolyfill\", \"absoluteImports\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst getTargets = _helperCompilationTargets.default.default || _helperCompilationTargets.default;\n\nfunction resolveOptions(options, babelApi) {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports\n  } = options,\n        providerOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n  if (isEmpty(options)) {\n    throw new Error(`\\\nThis plugin requires options, for example:\n    {\n      \"plugins\": [\n        [\"<plugin name>\", { method: \"usage-pure\" }]\n      ]\n    }\n\nSee more options at https://github.com/babel/babel-polyfills/blob/main/docs/usage.md`);\n  }\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";else if (method === \"entry-global\") methodName = \"entryGlobal\";else if (method === \"usage-pure\") methodName = \"usagePure\";else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(`.method must be one of \"entry-global\", \"usage-global\"` + ` or \"usage-pure\" (received ${JSON.stringify(method)})`);\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(`.include and .exclude are not supported when using the` + ` .shouldInjectPolyfill function.`);\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(`.shouldInjectPolyfill must be a function, or undefined` + ` (received ${JSON.stringify(shouldInjectPolyfill)})`);\n  }\n\n  if (absoluteImports != null && typeof absoluteImports !== \"boolean\" && typeof absoluteImports !== \"string\") {\n    throw new Error(`.absoluteImports must be a boolean, a string, or undefined` + ` (received ${JSON.stringify(absoluteImports)})`);\n  }\n\n  let targets;\n\n  if ( // If any browserslist-related option is specified, fallback to the old\n  // behavior of not using the targets specified in the top-level options.\n  targetsOption || configPath || ignoreBrowserslistConfig) {\n    const targetsObj = typeof targetsOption === \"string\" || Array.isArray(targetsOption) ? {\n      browsers: targetsOption\n    } : targetsOption;\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports != null ? absoluteImports : false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions\n  };\n}\n\nfunction instantiateProvider(factory, options, missingDependencies, dirname, debugLog, babelApi) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports\n  } = resolveOptions(options, babelApi);\n  const getUtils = (0, _utils.createUtilsGetter)(new _importsCache.default(moduleName => deps.resolve(dirname, moduleName, absoluteImports))); // eslint-disable-next-line prefer-const\n\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n  const depsCache = new Map();\n  const api = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver: _metaResolver.default,\n\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(`Internal error in the ${factory.name} provider: ` + `shouldInjectPolyfill() can't be called during initialization.`);\n      }\n\n      if (!polyfillsNames.has(name)) {\n        console.warn(`Internal error in the ${providerName} provider: ` + `unknown polyfill \"${name}\".`);\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n      let shouldInject = (0, _helperCompilationTargets.isRequired)(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n\n    debug(name) {\n      var _debugLog, _debugLog$polyfillsSu;\n\n      debugLog().found = true;\n      if (!debug || !name) return;\n      if (debugLog().polyfills.has(providerName)) return;\n      debugLog().polyfills.add(name);\n      (_debugLog$polyfillsSu = (_debugLog = debugLog()).polyfillsSupport) != null ? _debugLog$polyfillsSu : _debugLog.polyfillsSupport = polyfillsSupport;\n    },\n\n    assertDependency(name, version = \"*\") {\n      if (missingDependencies === false) return;\n\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n      const found = missingDependencies.all ? false : mapGetOr(depsCache, `${name} :: ${dirname}`, () => deps.has(dirname, name));\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    }\n\n  };\n  const provider = factory(api, providerOptions, dirname);\n  const providerName = provider.name || factory.name;\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(`The \"${providerName}\" provider doesn't support the \"${method}\" polyfilling method.`);\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n\n  ({\n    include,\n    exclude\n  } = (0, _normalizeOptions.validateIncludeExclude)(providerName, polyfillsNames, providerOptions.include || [], providerOptions.exclude || []));\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n    providerName,\n\n    callProvider(payload, path) {\n      const utils = getUtils(path);\n      provider[methodName](payload, utils, path);\n    }\n\n  };\n}\n\nfunction definePolyfillProvider(factory) {\n  return (0, _helperPluginUtils.declare)((babelApi, options, dirname) => {\n    babelApi.assertVersion(7);\n    const {\n      traverse\n    } = babelApi;\n    let debugLog;\n    const missingDependencies = (0, _normalizeOptions.applyMissingDependenciesDefaults)(options, babelApi);\n    const {\n      debug,\n      method,\n      targets,\n      provider,\n      providerName,\n      callProvider\n    } = instantiateProvider(factory, options, missingDependencies, dirname, () => debugLog, babelApi);\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n    const visitor = provider.visitor ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor]) : createVisitor(callProvider);\n\n    if (debug && debug !== _debugUtils.presetEnvSilentDebugHeader) {\n      console.log(`${providerName}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${(0, _debugUtils.stringifyTargetsMultiline)(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    const {\n      runtimeName\n    } = provider;\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre(file) {\n        var _provider$pre;\n\n        if (runtimeName) {\n          if (file.get(\"runtimeHelpersModuleName\") && file.get(\"runtimeHelpersModuleName\") !== runtimeName) {\n            console.warn(`Two different polyfill providers` + ` (${file.get(\"runtimeHelpersModuleProvider\")}` + ` and ${providerName}) are trying to define two` + ` conflicting @babel/runtime alternatives:` + ` ${file.get(\"runtimeHelpersModuleName\")} and ${runtimeName}.` + ` The second one will be ignored.`);\n          } else {\n            file.set(\"runtimeHelpersModuleName\", runtimeName);\n            file.set(\"runtimeHelpersModuleProvider\", providerName);\n          }\n        }\n\n        debugLog = {\n          polyfills: new Set(),\n          polyfillsSupport: undefined,\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set()\n        };\n        (_provider$pre = provider.pre) == null ? void 0 : _provider$pre.apply(this, arguments);\n      },\n\n      post() {\n        var _provider$post;\n\n        (_provider$post = provider.post) == null ? void 0 : _provider$post.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(method === \"entry-global\" ? debugLog.found ? `Based on your targets, the ${providerName} polyfill did not add any polyfill.` : `The entry point for the ${providerName} polyfill has not been found.` : `Based on your code and targets, the ${providerName} polyfill did not add any polyfill.`);\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(`The ${providerName} polyfill entry has been replaced with ` + `the following polyfills:`);\n        } else {\n          console.log(`The ${providerName} polyfill added the following polyfills:`);\n        }\n\n        for (const name of debugLog.polyfills) {\n          var _debugLog$polyfillsSu2;\n\n          if ((_debugLog$polyfillsSu2 = debugLog.polyfillsSupport) != null && _debugLog$polyfillsSu2[name]) {\n            const filteredTargets = (0, _helperCompilationTargets.getInclusionReasons)(name, targets, debugLog.polyfillsSupport);\n            const formattedTargets = JSON.stringify(filteredTargets).replace(/,/g, \", \").replace(/^\\{\"/, '{ \"').replace(/\"\\}$/, '\" }');\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      }\n\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n\n  return val;\n}\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}