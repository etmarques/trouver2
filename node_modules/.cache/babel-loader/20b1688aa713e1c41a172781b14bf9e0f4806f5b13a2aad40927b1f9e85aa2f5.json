{"ast":null,"code":"'use strict';\n\nconst {\n  visit,\n  visitSkip,\n  querySelector,\n  detachNodeFromParent\n} = require('../lib/xast.js');\nconst {\n  collectStylesheet,\n  computeStyle\n} = require('../lib/style.js');\nconst {\n  parsePathData\n} = require('../lib/path.js');\nexports.name = 'removeHiddenElems';\nexports.description = 'removes hidden elements (zero sized, with absent attributes)';\n\n/**\n * Remove hidden elements with disabled rendering:\n * - display=\"none\"\n * - opacity=\"0\"\n * - circle with zero radius\n * - ellipse with zero x-axis or y-axis radius\n * - rectangle with zero width or height\n * - pattern with zero width or height\n * - image with zero width or height\n * - path with empty data\n * - polyline with empty points\n * - polygon with empty points\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'removeHiddenElems'>}\n */\nexports.fn = (root, params) => {\n  const {\n    isHidden = true,\n    displayNone = true,\n    opacity0 = true,\n    circleR0 = true,\n    ellipseRX0 = true,\n    ellipseRY0 = true,\n    rectWidth0 = true,\n    rectHeight0 = true,\n    patternWidth0 = true,\n    patternHeight0 = true,\n    imageWidth0 = true,\n    imageHeight0 = true,\n    pathEmptyD = true,\n    polylineEmptyPoints = true,\n    polygonEmptyPoints = true\n  } = params;\n  const stylesheet = collectStylesheet(root);\n  visit(root, {\n    element: {\n      enter: (node, parentNode) => {\n        // transparent element inside clipPath still affect clipped elements\n        if (node.name === 'clipPath') {\n          return visitSkip;\n        }\n        const computedStyle = computeStyle(stylesheet, node);\n        // opacity=\"0\"\n        //\n        // https://www.w3.org/TR/SVG11/masking.html#ObjectAndGroupOpacityProperties\n        if (opacity0 && computedStyle.opacity && computedStyle.opacity.type === 'static' && computedStyle.opacity.value === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      }\n    }\n  });\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // Removes hidden elements\n        // https://www.w3schools.com/cssref/pr_class_visibility.asp\n        const computedStyle = computeStyle(stylesheet, node);\n        if (isHidden && computedStyle.visibility && computedStyle.visibility.type === 'static' && computedStyle.visibility.value === 'hidden' &&\n        // keep if any descendant enables visibility\n        querySelector(node, '[visibility=visible]') == null) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // display=\"none\"\n        //\n        // https://www.w3.org/TR/SVG11/painting.html#DisplayProperty\n        // \"A value of display: none indicates that the given element\n        // and its children shall not be rendered directly\"\n        if (displayNone && computedStyle.display && computedStyle.display.type === 'static' && computedStyle.display.value === 'none' &&\n        // markers with display: none still rendered\n        node.name !== 'marker') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Circles with zero radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#CircleElementRAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <circle r=\"0\">\n        if (circleR0 && node.name === 'circle' && node.children.length === 0 && node.attributes.r === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero x-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRXAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse rx=\"0\">\n        if (ellipseRX0 && node.name === 'ellipse' && node.children.length === 0 && node.attributes.rx === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero y-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRYAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse ry=\"0\">\n        if (ellipseRY0 && node.name === 'ellipse' && node.children.length === 0 && node.attributes.ry === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero width\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect width=\"0\">\n        if (rectWidth0 && node.name === 'rect' && node.children.length === 0 && node.attributes.width === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero height\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect height=\"0\">\n        if (rectHeight0 && rectWidth0 && node.name === 'rect' && node.children.length === 0 && node.attributes.height === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero width\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementWidthAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern width=\"0\">\n        if (patternWidth0 && node.name === 'pattern' && node.attributes.width === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero height\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementHeightAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern height=\"0\">\n        if (patternHeight0 && node.name === 'pattern' && node.attributes.height === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero width\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image width=\"0\">\n        if (imageWidth0 && node.name === 'image' && node.attributes.width === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero height\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image height=\"0\">\n        if (imageHeight0 && node.name === 'image' && node.attributes.height === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Path with empty data\n        //\n        // https://www.w3.org/TR/SVG11/paths.html#DAttribute\n        //\n        // <path d=\"\"/>\n        if (pathEmptyD && node.name === 'path') {\n          if (node.attributes.d == null) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          const pathData = parsePathData(node.attributes.d);\n          if (pathData.length === 0) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          // keep single point paths for markers\n          if (pathData.length === 1 && computedStyle['marker-start'] == null && computedStyle['marker-end'] == null) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          return;\n        }\n\n        // Polyline with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolylineElementPointsAttribute\n        //\n        // <polyline points=\"\">\n        if (polylineEmptyPoints && node.name === 'polyline' && node.attributes.points == null) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Polygon with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolygonElementPointsAttribute\n        //\n        // <polygon points=\"\">\n        if (polygonEmptyPoints && node.name === 'polygon' && node.attributes.points == null) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["visit","visitSkip","querySelector","detachNodeFromParent","require","collectStylesheet","computeStyle","parsePathData","exports","name","description","fn","root","params","isHidden","displayNone","opacity0","circleR0","ellipseRX0","ellipseRY0","rectWidth0","rectHeight0","patternWidth0","patternHeight0","imageWidth0","imageHeight0","pathEmptyD","polylineEmptyPoints","polygonEmptyPoints","stylesheet","element","enter","node","parentNode","computedStyle","opacity","type","value","visibility","display","children","length","attributes","r","rx","ry","width","height","d","pathData","points"],"sources":["C:/Users/AGU/Documents/trouver2/node_modules/svgo/plugins/removeHiddenElems.js"],"sourcesContent":["'use strict';\n\nconst {\n  visit,\n  visitSkip,\n  querySelector,\n  detachNodeFromParent,\n} = require('../lib/xast.js');\nconst { collectStylesheet, computeStyle } = require('../lib/style.js');\nconst { parsePathData } = require('../lib/path.js');\n\nexports.name = 'removeHiddenElems';\nexports.description =\n  'removes hidden elements (zero sized, with absent attributes)';\n\n/**\n * Remove hidden elements with disabled rendering:\n * - display=\"none\"\n * - opacity=\"0\"\n * - circle with zero radius\n * - ellipse with zero x-axis or y-axis radius\n * - rectangle with zero width or height\n * - pattern with zero width or height\n * - image with zero width or height\n * - path with empty data\n * - polyline with empty points\n * - polygon with empty points\n *\n * @author Kir Belevich\n *\n * @type {import('./plugins-types').Plugin<'removeHiddenElems'>}\n */\nexports.fn = (root, params) => {\n  const {\n    isHidden = true,\n    displayNone = true,\n    opacity0 = true,\n    circleR0 = true,\n    ellipseRX0 = true,\n    ellipseRY0 = true,\n    rectWidth0 = true,\n    rectHeight0 = true,\n    patternWidth0 = true,\n    patternHeight0 = true,\n    imageWidth0 = true,\n    imageHeight0 = true,\n    pathEmptyD = true,\n    polylineEmptyPoints = true,\n    polygonEmptyPoints = true,\n  } = params;\n  const stylesheet = collectStylesheet(root);\n\n  visit(root, {\n    element: {\n      enter: (node, parentNode) => {\n        // transparent element inside clipPath still affect clipped elements\n        if (node.name === 'clipPath') {\n          return visitSkip;\n        }\n        const computedStyle = computeStyle(stylesheet, node);\n        // opacity=\"0\"\n        //\n        // https://www.w3.org/TR/SVG11/masking.html#ObjectAndGroupOpacityProperties\n        if (\n          opacity0 &&\n          computedStyle.opacity &&\n          computedStyle.opacity.type === 'static' &&\n          computedStyle.opacity.value === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      },\n    },\n  });\n\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // Removes hidden elements\n        // https://www.w3schools.com/cssref/pr_class_visibility.asp\n        const computedStyle = computeStyle(stylesheet, node);\n        if (\n          isHidden &&\n          computedStyle.visibility &&\n          computedStyle.visibility.type === 'static' &&\n          computedStyle.visibility.value === 'hidden' &&\n          // keep if any descendant enables visibility\n          querySelector(node, '[visibility=visible]') == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // display=\"none\"\n        //\n        // https://www.w3.org/TR/SVG11/painting.html#DisplayProperty\n        // \"A value of display: none indicates that the given element\n        // and its children shall not be rendered directly\"\n        if (\n          displayNone &&\n          computedStyle.display &&\n          computedStyle.display.type === 'static' &&\n          computedStyle.display.value === 'none' &&\n          // markers with display: none still rendered\n          node.name !== 'marker'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Circles with zero radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#CircleElementRAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <circle r=\"0\">\n        if (\n          circleR0 &&\n          node.name === 'circle' &&\n          node.children.length === 0 &&\n          node.attributes.r === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero x-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRXAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse rx=\"0\">\n        if (\n          ellipseRX0 &&\n          node.name === 'ellipse' &&\n          node.children.length === 0 &&\n          node.attributes.rx === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero y-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRYAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse ry=\"0\">\n        if (\n          ellipseRY0 &&\n          node.name === 'ellipse' &&\n          node.children.length === 0 &&\n          node.attributes.ry === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero width\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect width=\"0\">\n        if (\n          rectWidth0 &&\n          node.name === 'rect' &&\n          node.children.length === 0 &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero height\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect height=\"0\">\n        if (\n          rectHeight0 &&\n          rectWidth0 &&\n          node.name === 'rect' &&\n          node.children.length === 0 &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero width\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementWidthAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern width=\"0\">\n        if (\n          patternWidth0 &&\n          node.name === 'pattern' &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero height\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementHeightAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern height=\"0\">\n        if (\n          patternHeight0 &&\n          node.name === 'pattern' &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero width\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image width=\"0\">\n        if (\n          imageWidth0 &&\n          node.name === 'image' &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero height\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image height=\"0\">\n        if (\n          imageHeight0 &&\n          node.name === 'image' &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Path with empty data\n        //\n        // https://www.w3.org/TR/SVG11/paths.html#DAttribute\n        //\n        // <path d=\"\"/>\n        if (pathEmptyD && node.name === 'path') {\n          if (node.attributes.d == null) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          const pathData = parsePathData(node.attributes.d);\n          if (pathData.length === 0) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          // keep single point paths for markers\n          if (\n            pathData.length === 1 &&\n            computedStyle['marker-start'] == null &&\n            computedStyle['marker-end'] == null\n          ) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          return;\n        }\n\n        // Polyline with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolylineElementPointsAttribute\n        //\n        // <polyline points=\"\">\n        if (\n          polylineEmptyPoints &&\n          node.name === 'polyline' &&\n          node.attributes.points == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Polygon with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolygonElementPointsAttribute\n        //\n        // <polygon points=\"\">\n        if (\n          polygonEmptyPoints &&\n          node.name === 'polygon' &&\n          node.attributes.points == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      },\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}