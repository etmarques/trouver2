{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = annotateAsPure;\nvar _t = require(\"@babel/types\");\nconst {\n  addComment\n} = _t;\nconst PURE_ANNOTATION = \"#__PURE__\";\nconst isPureAnnotated = _ref => {\n  let {\n    leadingComments\n  } = _ref;\n  return !!leadingComments && leadingComments.some(comment => /[@#]__PURE__/.test(comment.value));\n};\nfunction annotateAsPure(pathOrNode) {\n  const node = pathOrNode[\"node\"] || pathOrNode;\n  if (isPureAnnotated(node)) {\n    return;\n  }\n  addComment(node, \"leading\", PURE_ANNOTATION);\n}","map":{"version":3,"names":["_t","require","addComment","PURE_ANNOTATION","isPureAnnotated","_ref","leadingComments","some","comment","test","value","annotateAsPure","pathOrNode","node"],"sources":["C:\\Users\\AGU\\Documents\\trouver2\\node_modules\\@babel\\helper-annotate-as-pure\\src\\index.ts"],"sourcesContent":["import { addComment, type Node } from \"@babel/types\";\nimport type { NodePath } from \"@babel/traverse\";\n\nconst PURE_ANNOTATION = \"#__PURE__\";\n\nconst isPureAnnotated = ({ leadingComments }: Node): boolean =>\n  !!leadingComments &&\n  leadingComments.some(comment => /[@#]__PURE__/.test(comment.value));\n\nexport default function annotateAsPure(pathOrNode: Node | NodePath): void {\n  const node =\n    // @ts-expect-error Node will not have `node` property\n    (pathOrNode[\"node\"] || pathOrNode) as Node;\n  if (isPureAnnotated(node)) {\n    return;\n  }\n  addComment(node, \"leading\", PURE_ANNOTATION);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,EAAA,GAAAC,OAAA;AAAqD;EAA5CC;AAAU,IAAAF,EAAA;AAGnB,MAAMG,eAAe,GAAG,WAAW;AAEnC,MAAMC,eAAe,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAsB,CAAC,GAAAD,IAAA;EAAA,OAChD,CAAC,CAACC,eAAe,IACjBA,eAAe,CAACC,IAAI,CAACC,OAAO,IAAI,cAAc,CAACC,IAAI,CAACD,OAAO,CAACE,KAAK,CAAC,CAAC;AAAA;AAEtD,SAASC,cAAcA,CAACC,UAA2B,EAAQ;EACxE,MAAMC,IAAI,GAEPD,UAAU,CAAC,MAAM,CAAC,IAAIA,UAAmB;EAC5C,IAAIR,eAAe,CAACS,IAAI,CAAC,EAAE;IACzB;EACF;EACAX,UAAU,CAACW,IAAI,EAAE,SAAS,EAAEV,eAAe,CAAC;AAC9C"},"metadata":{},"sourceType":"script","externalDependencies":[]}