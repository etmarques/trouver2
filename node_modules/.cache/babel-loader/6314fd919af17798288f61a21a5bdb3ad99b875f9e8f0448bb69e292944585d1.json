{"ast":null,"code":"'use strict';\n\nconst isTag = node => {\n  return node.type === 'element';\n};\nconst existsOne = (test, elems) => {\n  return elems.some(elem => {\n    if (isTag(elem)) {\n      return test(elem) || existsOne(test, getChildren(elem));\n    } else {\n      return false;\n    }\n  });\n};\nconst getAttributeValue = (elem, name) => {\n  return elem.attributes[name];\n};\nconst getChildren = node => {\n  return node.children || [];\n};\nconst getName = elemAst => {\n  return elemAst.name;\n};\nconst getParent = node => {\n  return node.parentNode || null;\n};\nconst getSiblings = elem => {\n  var parent = getParent(elem);\n  return parent ? getChildren(parent) : [];\n};\nconst getText = node => {\n  if (node.children[0].type === 'text' && node.children[0].type === 'cdata') {\n    return node.children[0].value;\n  }\n  return '';\n};\nconst hasAttrib = (elem, name) => {\n  return elem.attributes[name] !== undefined;\n};\nconst removeSubsets = nodes => {\n  let idx = nodes.length;\n  let node;\n  let ancestor;\n  let replace;\n  // Check if each node (or one of its ancestors) is already contained in the\n  // array.\n  while (--idx > -1) {\n    node = ancestor = nodes[idx];\n    // Temporarily remove the node under consideration\n    nodes[idx] = null;\n    replace = true;\n    while (ancestor) {\n      if (nodes.includes(ancestor)) {\n        replace = false;\n        nodes.splice(idx, 1);\n        break;\n      }\n      ancestor = getParent(ancestor);\n    }\n    // If the node has been found to be unique, re-insert it.\n    if (replace) {\n      nodes[idx] = node;\n    }\n  }\n  return nodes;\n};\nconst findAll = (test, elems) => {\n  const result = [];\n  for (const elem of elems) {\n    if (isTag(elem)) {\n      if (test(elem)) {\n        result.push(elem);\n      }\n      result.push(...findAll(test, getChildren(elem)));\n    }\n  }\n  return result;\n};\nconst findOne = (test, elems) => {\n  for (const elem of elems) {\n    if (isTag(elem)) {\n      if (test(elem)) {\n        return elem;\n      }\n      const result = findOne(test, getChildren(elem));\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return null;\n};\nconst svgoCssSelectAdapter = {\n  isTag,\n  existsOne,\n  getAttributeValue,\n  getChildren,\n  getName,\n  getParent,\n  getSiblings,\n  getText,\n  hasAttrib,\n  removeSubsets,\n  findAll,\n  findOne\n};\nmodule.exports = svgoCssSelectAdapter;","map":{"version":3,"names":["isTag","node","type","existsOne","test","elems","some","elem","getChildren","getAttributeValue","name","attributes","children","getName","elemAst","getParent","parentNode","getSiblings","parent","getText","value","hasAttrib","undefined","removeSubsets","nodes","idx","length","ancestor","replace","includes","splice","findAll","result","push","findOne","svgoCssSelectAdapter","module","exports"],"sources":["C:/Users/AGU/Documents/trouver2/node_modules/svgo/lib/svgo/css-select-adapter.js"],"sourcesContent":["'use strict';\n\nconst isTag = (node) => {\n  return node.type === 'element';\n};\n\nconst existsOne = (test, elems) => {\n  return elems.some((elem) => {\n    if (isTag(elem)) {\n      return test(elem) || existsOne(test, getChildren(elem));\n    } else {\n      return false;\n    }\n  });\n};\n\nconst getAttributeValue = (elem, name) => {\n  return elem.attributes[name];\n};\n\nconst getChildren = (node) => {\n  return node.children || [];\n};\n\nconst getName = (elemAst) => {\n  return elemAst.name;\n};\n\nconst getParent = (node) => {\n  return node.parentNode || null;\n};\n\nconst getSiblings = (elem) => {\n  var parent = getParent(elem);\n  return parent ? getChildren(parent) : [];\n};\n\nconst getText = (node) => {\n  if (node.children[0].type === 'text' && node.children[0].type === 'cdata') {\n    return node.children[0].value;\n  }\n  return '';\n};\n\nconst hasAttrib = (elem, name) => {\n  return elem.attributes[name] !== undefined;\n};\n\nconst removeSubsets = (nodes) => {\n  let idx = nodes.length;\n  let node;\n  let ancestor;\n  let replace;\n  // Check if each node (or one of its ancestors) is already contained in the\n  // array.\n  while (--idx > -1) {\n    node = ancestor = nodes[idx];\n    // Temporarily remove the node under consideration\n    nodes[idx] = null;\n    replace = true;\n    while (ancestor) {\n      if (nodes.includes(ancestor)) {\n        replace = false;\n        nodes.splice(idx, 1);\n        break;\n      }\n      ancestor = getParent(ancestor);\n    }\n    // If the node has been found to be unique, re-insert it.\n    if (replace) {\n      nodes[idx] = node;\n    }\n  }\n  return nodes;\n};\n\nconst findAll = (test, elems) => {\n  const result = [];\n  for (const elem of elems) {\n    if (isTag(elem)) {\n      if (test(elem)) {\n        result.push(elem);\n      }\n      result.push(...findAll(test, getChildren(elem)));\n    }\n  }\n  return result;\n};\n\nconst findOne = (test, elems) => {\n  for (const elem of elems) {\n    if (isTag(elem)) {\n      if (test(elem)) {\n        return elem;\n      }\n      const result = findOne(test, getChildren(elem));\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return null;\n};\n\nconst svgoCssSelectAdapter = {\n  isTag,\n  existsOne,\n  getAttributeValue,\n  getChildren,\n  getName,\n  getParent,\n  getSiblings,\n  getText,\n  hasAttrib,\n  removeSubsets,\n  findAll,\n  findOne,\n};\n\nmodule.exports = svgoCssSelectAdapter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}